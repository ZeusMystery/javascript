/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: release-1.24
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { V1AWSElasticBlockStoreVolumeSource } from './V1AWSElasticBlockStoreVolumeSource';
import { V1AzureDiskVolumeSource } from './V1AzureDiskVolumeSource';
import { V1AzureFileVolumeSource } from './V1AzureFileVolumeSource';
import { V1CSIVolumeSource } from './V1CSIVolumeSource';
import { V1CephFSVolumeSource } from './V1CephFSVolumeSource';
import { V1CinderVolumeSource } from './V1CinderVolumeSource';
import { V1ConfigMapVolumeSource } from './V1ConfigMapVolumeSource';
import { V1DownwardAPIVolumeSource } from './V1DownwardAPIVolumeSource';
import { V1EmptyDirVolumeSource } from './V1EmptyDirVolumeSource';
import { V1EphemeralVolumeSource } from './V1EphemeralVolumeSource';
import { V1FCVolumeSource } from './V1FCVolumeSource';
import { V1FlexVolumeSource } from './V1FlexVolumeSource';
import { V1FlockerVolumeSource } from './V1FlockerVolumeSource';
import { V1GCEPersistentDiskVolumeSource } from './V1GCEPersistentDiskVolumeSource';
import { V1GitRepoVolumeSource } from './V1GitRepoVolumeSource';
import { V1GlusterfsVolumeSource } from './V1GlusterfsVolumeSource';
import { V1HostPathVolumeSource } from './V1HostPathVolumeSource';
import { V1ISCSIVolumeSource } from './V1ISCSIVolumeSource';
import { V1NFSVolumeSource } from './V1NFSVolumeSource';
import { V1PersistentVolumeClaimVolumeSource } from './V1PersistentVolumeClaimVolumeSource';
import { V1PhotonPersistentDiskVolumeSource } from './V1PhotonPersistentDiskVolumeSource';
import { V1PortworxVolumeSource } from './V1PortworxVolumeSource';
import { V1ProjectedVolumeSource } from './V1ProjectedVolumeSource';
import { V1QuobyteVolumeSource } from './V1QuobyteVolumeSource';
import { V1RBDVolumeSource } from './V1RBDVolumeSource';
import { V1ScaleIOVolumeSource } from './V1ScaleIOVolumeSource';
import { V1SecretVolumeSource } from './V1SecretVolumeSource';
import { V1StorageOSVolumeSource } from './V1StorageOSVolumeSource';
import { V1VsphereVirtualDiskVolumeSource } from './V1VsphereVirtualDiskVolumeSource';
import { HttpFile } from '../http/http';

/**
* Volume represents a named volume in a pod that may be accessed by any container in the pod.
*/
export class V1Volume {
    'awsElasticBlockStore'?: V1AWSElasticBlockStoreVolumeSource;
    'azureDisk'?: V1AzureDiskVolumeSource;
    'azureFile'?: V1AzureFileVolumeSource;
    'cephfs'?: V1CephFSVolumeSource;
    'cinder'?: V1CinderVolumeSource;
    'configMap'?: V1ConfigMapVolumeSource;
    'csi'?: V1CSIVolumeSource;
    'downwardAPI'?: V1DownwardAPIVolumeSource;
    'emptyDir'?: V1EmptyDirVolumeSource;
    'ephemeral'?: V1EphemeralVolumeSource;
    'fc'?: V1FCVolumeSource;
    'flexVolume'?: V1FlexVolumeSource;
    'flocker'?: V1FlockerVolumeSource;
    'gcePersistentDisk'?: V1GCEPersistentDiskVolumeSource;
    'gitRepo'?: V1GitRepoVolumeSource;
    'glusterfs'?: V1GlusterfsVolumeSource;
    'hostPath'?: V1HostPathVolumeSource;
    'iscsi'?: V1ISCSIVolumeSource;
    /**
    * name of the volume. Must be a DNS_LABEL and unique within the pod. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    */
    'name': string;
    'nfs'?: V1NFSVolumeSource;
    'persistentVolumeClaim'?: V1PersistentVolumeClaimVolumeSource;
    'photonPersistentDisk'?: V1PhotonPersistentDiskVolumeSource;
    'portworxVolume'?: V1PortworxVolumeSource;
    'projected'?: V1ProjectedVolumeSource;
    'quobyte'?: V1QuobyteVolumeSource;
    'rbd'?: V1RBDVolumeSource;
    'scaleIO'?: V1ScaleIOVolumeSource;
    'secret'?: V1SecretVolumeSource;
    'storageos'?: V1StorageOSVolumeSource;
    'vsphereVolume'?: V1VsphereVirtualDiskVolumeSource;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "awsElasticBlockStore",
            "baseName": "awsElasticBlockStore",
            "type": "V1AWSElasticBlockStoreVolumeSource",
            "format": ""
        },
        {
            "name": "azureDisk",
            "baseName": "azureDisk",
            "type": "V1AzureDiskVolumeSource",
            "format": ""
        },
        {
            "name": "azureFile",
            "baseName": "azureFile",
            "type": "V1AzureFileVolumeSource",
            "format": ""
        },
        {
            "name": "cephfs",
            "baseName": "cephfs",
            "type": "V1CephFSVolumeSource",
            "format": ""
        },
        {
            "name": "cinder",
            "baseName": "cinder",
            "type": "V1CinderVolumeSource",
            "format": ""
        },
        {
            "name": "configMap",
            "baseName": "configMap",
            "type": "V1ConfigMapVolumeSource",
            "format": ""
        },
        {
            "name": "csi",
            "baseName": "csi",
            "type": "V1CSIVolumeSource",
            "format": ""
        },
        {
            "name": "downwardAPI",
            "baseName": "downwardAPI",
            "type": "V1DownwardAPIVolumeSource",
            "format": ""
        },
        {
            "name": "emptyDir",
            "baseName": "emptyDir",
            "type": "V1EmptyDirVolumeSource",
            "format": ""
        },
        {
            "name": "ephemeral",
            "baseName": "ephemeral",
            "type": "V1EphemeralVolumeSource",
            "format": ""
        },
        {
            "name": "fc",
            "baseName": "fc",
            "type": "V1FCVolumeSource",
            "format": ""
        },
        {
            "name": "flexVolume",
            "baseName": "flexVolume",
            "type": "V1FlexVolumeSource",
            "format": ""
        },
        {
            "name": "flocker",
            "baseName": "flocker",
            "type": "V1FlockerVolumeSource",
            "format": ""
        },
        {
            "name": "gcePersistentDisk",
            "baseName": "gcePersistentDisk",
            "type": "V1GCEPersistentDiskVolumeSource",
            "format": ""
        },
        {
            "name": "gitRepo",
            "baseName": "gitRepo",
            "type": "V1GitRepoVolumeSource",
            "format": ""
        },
        {
            "name": "glusterfs",
            "baseName": "glusterfs",
            "type": "V1GlusterfsVolumeSource",
            "format": ""
        },
        {
            "name": "hostPath",
            "baseName": "hostPath",
            "type": "V1HostPathVolumeSource",
            "format": ""
        },
        {
            "name": "iscsi",
            "baseName": "iscsi",
            "type": "V1ISCSIVolumeSource",
            "format": ""
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string",
            "format": ""
        },
        {
            "name": "nfs",
            "baseName": "nfs",
            "type": "V1NFSVolumeSource",
            "format": ""
        },
        {
            "name": "persistentVolumeClaim",
            "baseName": "persistentVolumeClaim",
            "type": "V1PersistentVolumeClaimVolumeSource",
            "format": ""
        },
        {
            "name": "photonPersistentDisk",
            "baseName": "photonPersistentDisk",
            "type": "V1PhotonPersistentDiskVolumeSource",
            "format": ""
        },
        {
            "name": "portworxVolume",
            "baseName": "portworxVolume",
            "type": "V1PortworxVolumeSource",
            "format": ""
        },
        {
            "name": "projected",
            "baseName": "projected",
            "type": "V1ProjectedVolumeSource",
            "format": ""
        },
        {
            "name": "quobyte",
            "baseName": "quobyte",
            "type": "V1QuobyteVolumeSource",
            "format": ""
        },
        {
            "name": "rbd",
            "baseName": "rbd",
            "type": "V1RBDVolumeSource",
            "format": ""
        },
        {
            "name": "scaleIO",
            "baseName": "scaleIO",
            "type": "V1ScaleIOVolumeSource",
            "format": ""
        },
        {
            "name": "secret",
            "baseName": "secret",
            "type": "V1SecretVolumeSource",
            "format": ""
        },
        {
            "name": "storageos",
            "baseName": "storageos",
            "type": "V1StorageOSVolumeSource",
            "format": ""
        },
        {
            "name": "vsphereVolume",
            "baseName": "vsphereVolume",
            "type": "V1VsphereVirtualDiskVolumeSource",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return V1Volume.attributeTypeMap;
    }

    public constructor() {
    }
}

