/**
 * Kubernetes
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.6.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.KubernetesJsClient);
  }
}(this, function(expect, KubernetesJsClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new KubernetesJsClient.RbacAuthorization_v1beta1Api();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('RbacAuthorization_v1beta1Api', function() {
    describe('createClusterRole', function() {
      it('should call createClusterRole successfully', function(done) {
        //uncomment below and update the code to test createClusterRole
        //instance.createClusterRole(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createClusterRoleBinding', function() {
      it('should call createClusterRoleBinding successfully', function(done) {
        //uncomment below and update the code to test createClusterRoleBinding
        //instance.createClusterRoleBinding(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createNamespacedRole', function() {
      it('should call createNamespacedRole successfully', function(done) {
        //uncomment below and update the code to test createNamespacedRole
        //instance.createNamespacedRole(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createNamespacedRoleBinding', function() {
      it('should call createNamespacedRoleBinding successfully', function(done) {
        //uncomment below and update the code to test createNamespacedRoleBinding
        //instance.createNamespacedRoleBinding(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteClusterRole', function() {
      it('should call deleteClusterRole successfully', function(done) {
        //uncomment below and update the code to test deleteClusterRole
        //instance.deleteClusterRole(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteClusterRoleBinding', function() {
      it('should call deleteClusterRoleBinding successfully', function(done) {
        //uncomment below and update the code to test deleteClusterRoleBinding
        //instance.deleteClusterRoleBinding(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteCollectionClusterRole', function() {
      it('should call deleteCollectionClusterRole successfully', function(done) {
        //uncomment below and update the code to test deleteCollectionClusterRole
        //instance.deleteCollectionClusterRole(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteCollectionClusterRoleBinding', function() {
      it('should call deleteCollectionClusterRoleBinding successfully', function(done) {
        //uncomment below and update the code to test deleteCollectionClusterRoleBinding
        //instance.deleteCollectionClusterRoleBinding(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteCollectionNamespacedRole', function() {
      it('should call deleteCollectionNamespacedRole successfully', function(done) {
        //uncomment below and update the code to test deleteCollectionNamespacedRole
        //instance.deleteCollectionNamespacedRole(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteCollectionNamespacedRoleBinding', function() {
      it('should call deleteCollectionNamespacedRoleBinding successfully', function(done) {
        //uncomment below and update the code to test deleteCollectionNamespacedRoleBinding
        //instance.deleteCollectionNamespacedRoleBinding(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteNamespacedRole', function() {
      it('should call deleteNamespacedRole successfully', function(done) {
        //uncomment below and update the code to test deleteNamespacedRole
        //instance.deleteNamespacedRole(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteNamespacedRoleBinding', function() {
      it('should call deleteNamespacedRoleBinding successfully', function(done) {
        //uncomment below and update the code to test deleteNamespacedRoleBinding
        //instance.deleteNamespacedRoleBinding(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAPIResources', function() {
      it('should call getAPIResources successfully', function(done) {
        //uncomment below and update the code to test getAPIResources
        //instance.getAPIResources(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listClusterRole', function() {
      it('should call listClusterRole successfully', function(done) {
        //uncomment below and update the code to test listClusterRole
        //instance.listClusterRole(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listClusterRoleBinding', function() {
      it('should call listClusterRoleBinding successfully', function(done) {
        //uncomment below and update the code to test listClusterRoleBinding
        //instance.listClusterRoleBinding(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listNamespacedRole', function() {
      it('should call listNamespacedRole successfully', function(done) {
        //uncomment below and update the code to test listNamespacedRole
        //instance.listNamespacedRole(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listNamespacedRoleBinding', function() {
      it('should call listNamespacedRoleBinding successfully', function(done) {
        //uncomment below and update the code to test listNamespacedRoleBinding
        //instance.listNamespacedRoleBinding(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listRoleBindingForAllNamespaces', function() {
      it('should call listRoleBindingForAllNamespaces successfully', function(done) {
        //uncomment below and update the code to test listRoleBindingForAllNamespaces
        //instance.listRoleBindingForAllNamespaces(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listRoleForAllNamespaces', function() {
      it('should call listRoleForAllNamespaces successfully', function(done) {
        //uncomment below and update the code to test listRoleForAllNamespaces
        //instance.listRoleForAllNamespaces(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchClusterRole', function() {
      it('should call patchClusterRole successfully', function(done) {
        //uncomment below and update the code to test patchClusterRole
        //instance.patchClusterRole(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchClusterRoleBinding', function() {
      it('should call patchClusterRoleBinding successfully', function(done) {
        //uncomment below and update the code to test patchClusterRoleBinding
        //instance.patchClusterRoleBinding(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchNamespacedRole', function() {
      it('should call patchNamespacedRole successfully', function(done) {
        //uncomment below and update the code to test patchNamespacedRole
        //instance.patchNamespacedRole(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchNamespacedRoleBinding', function() {
      it('should call patchNamespacedRoleBinding successfully', function(done) {
        //uncomment below and update the code to test patchNamespacedRoleBinding
        //instance.patchNamespacedRoleBinding(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('readClusterRole', function() {
      it('should call readClusterRole successfully', function(done) {
        //uncomment below and update the code to test readClusterRole
        //instance.readClusterRole(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('readClusterRoleBinding', function() {
      it('should call readClusterRoleBinding successfully', function(done) {
        //uncomment below and update the code to test readClusterRoleBinding
        //instance.readClusterRoleBinding(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('readNamespacedRole', function() {
      it('should call readNamespacedRole successfully', function(done) {
        //uncomment below and update the code to test readNamespacedRole
        //instance.readNamespacedRole(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('readNamespacedRoleBinding', function() {
      it('should call readNamespacedRoleBinding successfully', function(done) {
        //uncomment below and update the code to test readNamespacedRoleBinding
        //instance.readNamespacedRoleBinding(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replaceClusterRole', function() {
      it('should call replaceClusterRole successfully', function(done) {
        //uncomment below and update the code to test replaceClusterRole
        //instance.replaceClusterRole(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replaceClusterRoleBinding', function() {
      it('should call replaceClusterRoleBinding successfully', function(done) {
        //uncomment below and update the code to test replaceClusterRoleBinding
        //instance.replaceClusterRoleBinding(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replaceNamespacedRole', function() {
      it('should call replaceNamespacedRole successfully', function(done) {
        //uncomment below and update the code to test replaceNamespacedRole
        //instance.replaceNamespacedRole(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replaceNamespacedRoleBinding', function() {
      it('should call replaceNamespacedRoleBinding successfully', function(done) {
        //uncomment below and update the code to test replaceNamespacedRoleBinding
        //instance.replaceNamespacedRoleBinding(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
