/**
 * Kubernetes
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.6.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['io.kubernetes.js/ApiClient', 'io.kubernetes.js/io.kubernetes.js.models/V1APIResourceList', 'io.kubernetes.js/io.kubernetes.js.models/V1DeleteOptions', 'io.kubernetes.js/io.kubernetes.js.models/V1Status', 'io.kubernetes.js/io.kubernetes.js.models/V1alpha1ClusterRole', 'io.kubernetes.js/io.kubernetes.js.models/V1alpha1ClusterRoleBinding', 'io.kubernetes.js/io.kubernetes.js.models/V1alpha1ClusterRoleBindingList', 'io.kubernetes.js/io.kubernetes.js.models/V1alpha1ClusterRoleList', 'io.kubernetes.js/io.kubernetes.js.models/V1alpha1Role', 'io.kubernetes.js/io.kubernetes.js.models/V1alpha1RoleBinding', 'io.kubernetes.js/io.kubernetes.js.models/V1alpha1RoleBindingList', 'io.kubernetes.js/io.kubernetes.js.models/V1alpha1RoleList'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../io.kubernetes.js.models/V1APIResourceList'), require('../io.kubernetes.js.models/V1DeleteOptions'), require('../io.kubernetes.js.models/V1Status'), require('../io.kubernetes.js.models/V1alpha1ClusterRole'), require('../io.kubernetes.js.models/V1alpha1ClusterRoleBinding'), require('../io.kubernetes.js.models/V1alpha1ClusterRoleBindingList'), require('../io.kubernetes.js.models/V1alpha1ClusterRoleList'), require('../io.kubernetes.js.models/V1alpha1Role'), require('../io.kubernetes.js.models/V1alpha1RoleBinding'), require('../io.kubernetes.js.models/V1alpha1RoleBindingList'), require('../io.kubernetes.js.models/V1alpha1RoleList'));
  } else {
    // Browser globals (root is window)
    if (!root.KubernetesJsClient) {
      root.KubernetesJsClient = {};
    }
    root.KubernetesJsClient.RbacAuthorization_v1alpha1Api = factory(root.KubernetesJsClient.ApiClient, root.KubernetesJsClient.V1APIResourceList, root.KubernetesJsClient.V1DeleteOptions, root.KubernetesJsClient.V1Status, root.KubernetesJsClient.V1alpha1ClusterRole, root.KubernetesJsClient.V1alpha1ClusterRoleBinding, root.KubernetesJsClient.V1alpha1ClusterRoleBindingList, root.KubernetesJsClient.V1alpha1ClusterRoleList, root.KubernetesJsClient.V1alpha1Role, root.KubernetesJsClient.V1alpha1RoleBinding, root.KubernetesJsClient.V1alpha1RoleBindingList, root.KubernetesJsClient.V1alpha1RoleList);
  }
}(this, function(ApiClient, V1APIResourceList, V1DeleteOptions, V1Status, V1alpha1ClusterRole, V1alpha1ClusterRoleBinding, V1alpha1ClusterRoleBindingList, V1alpha1ClusterRoleList, V1alpha1Role, V1alpha1RoleBinding, V1alpha1RoleBindingList, V1alpha1RoleList) {
  'use strict';

  /**
   * RbacAuthorization_v1alpha1 service.
   * @module io.kubernetes.js/io.kubernetes.js.apis/RbacAuthorization_v1alpha1Api
   * @version 1.0.0-snapshot
   */

  /**
   * Constructs a new RbacAuthorization_v1alpha1Api. 
   * @alias module:io.kubernetes.js/io.kubernetes.js.apis/RbacAuthorization_v1alpha1Api
   * @class
   * @param {module:io.kubernetes.js/ApiClient} apiClient Optional API client implementation to use,
   * default to {@link module:io.kubernetes.js/ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the createClusterRole operation.
     * @callback module:io.kubernetes.js/io.kubernetes.js.apis/RbacAuthorization_v1alpha1Api~createClusterRoleCallback
     * @param {String} error Error message, if any.
     * @param {module:io.kubernetes.js/io.kubernetes.js.models/V1alpha1ClusterRole} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * create a ClusterRole
     * @param {module:io.kubernetes.js/io.kubernetes.js.models/V1alpha1ClusterRole} body 
     * @param {Object} opts Optional parameters
     * @param {String} opts.pretty If &#39;true&#39;, then the output is pretty printed.
     * @param {module:io.kubernetes.js/io.kubernetes.js.apis/RbacAuthorization_v1alpha1Api~createClusterRoleCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:io.kubernetes.js/io.kubernetes.js.models/V1alpha1ClusterRole}
     */
    this.createClusterRole = function(body, opts, callback) {
      opts = opts || {};
      var postBody = body;

      // verify the required parameter 'body' is set
      if (body == undefined || body == null) {
        throw new Error("Missing the required parameter 'body' when calling createClusterRole");
      }


      var pathParams = {
      };
      var queryParams = {
        'pretty': opts['pretty']
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['BearerToken'];
      var contentTypes = ['*/*'];
      var accepts = ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'];
      var returnType = V1alpha1ClusterRole;

      return this.apiClient.callApi(
        '/apis/rbac.authorization.k8s.io/v1alpha1/clusterroles', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the createClusterRoleBinding operation.
     * @callback module:io.kubernetes.js/io.kubernetes.js.apis/RbacAuthorization_v1alpha1Api~createClusterRoleBindingCallback
     * @param {String} error Error message, if any.
     * @param {module:io.kubernetes.js/io.kubernetes.js.models/V1alpha1ClusterRoleBinding} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * create a ClusterRoleBinding
     * @param {module:io.kubernetes.js/io.kubernetes.js.models/V1alpha1ClusterRoleBinding} body 
     * @param {Object} opts Optional parameters
     * @param {String} opts.pretty If &#39;true&#39;, then the output is pretty printed.
     * @param {module:io.kubernetes.js/io.kubernetes.js.apis/RbacAuthorization_v1alpha1Api~createClusterRoleBindingCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:io.kubernetes.js/io.kubernetes.js.models/V1alpha1ClusterRoleBinding}
     */
    this.createClusterRoleBinding = function(body, opts, callback) {
      opts = opts || {};
      var postBody = body;

      // verify the required parameter 'body' is set
      if (body == undefined || body == null) {
        throw new Error("Missing the required parameter 'body' when calling createClusterRoleBinding");
      }


      var pathParams = {
      };
      var queryParams = {
        'pretty': opts['pretty']
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['BearerToken'];
      var contentTypes = ['*/*'];
      var accepts = ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'];
      var returnType = V1alpha1ClusterRoleBinding;

      return this.apiClient.callApi(
        '/apis/rbac.authorization.k8s.io/v1alpha1/clusterrolebindings', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the createNamespacedRole operation.
     * @callback module:io.kubernetes.js/io.kubernetes.js.apis/RbacAuthorization_v1alpha1Api~createNamespacedRoleCallback
     * @param {String} error Error message, if any.
     * @param {module:io.kubernetes.js/io.kubernetes.js.models/V1alpha1Role} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * create a Role
     * @param {String} namespace object name and auth scope, such as for teams and projects
     * @param {module:io.kubernetes.js/io.kubernetes.js.models/V1alpha1Role} body 
     * @param {Object} opts Optional parameters
     * @param {String} opts.pretty If &#39;true&#39;, then the output is pretty printed.
     * @param {module:io.kubernetes.js/io.kubernetes.js.apis/RbacAuthorization_v1alpha1Api~createNamespacedRoleCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:io.kubernetes.js/io.kubernetes.js.models/V1alpha1Role}
     */
    this.createNamespacedRole = function(namespace, body, opts, callback) {
      opts = opts || {};
      var postBody = body;

      // verify the required parameter 'namespace' is set
      if (namespace == undefined || namespace == null) {
        throw new Error("Missing the required parameter 'namespace' when calling createNamespacedRole");
      }

      // verify the required parameter 'body' is set
      if (body == undefined || body == null) {
        throw new Error("Missing the required parameter 'body' when calling createNamespacedRole");
      }


      var pathParams = {
        'namespace': namespace
      };
      var queryParams = {
        'pretty': opts['pretty']
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['BearerToken'];
      var contentTypes = ['*/*'];
      var accepts = ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'];
      var returnType = V1alpha1Role;

      return this.apiClient.callApi(
        '/apis/rbac.authorization.k8s.io/v1alpha1/namespaces/{namespace}/roles', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the createNamespacedRoleBinding operation.
     * @callback module:io.kubernetes.js/io.kubernetes.js.apis/RbacAuthorization_v1alpha1Api~createNamespacedRoleBindingCallback
     * @param {String} error Error message, if any.
     * @param {module:io.kubernetes.js/io.kubernetes.js.models/V1alpha1RoleBinding} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * create a RoleBinding
     * @param {String} namespace object name and auth scope, such as for teams and projects
     * @param {module:io.kubernetes.js/io.kubernetes.js.models/V1alpha1RoleBinding} body 
     * @param {Object} opts Optional parameters
     * @param {String} opts.pretty If &#39;true&#39;, then the output is pretty printed.
     * @param {module:io.kubernetes.js/io.kubernetes.js.apis/RbacAuthorization_v1alpha1Api~createNamespacedRoleBindingCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:io.kubernetes.js/io.kubernetes.js.models/V1alpha1RoleBinding}
     */
    this.createNamespacedRoleBinding = function(namespace, body, opts, callback) {
      opts = opts || {};
      var postBody = body;

      // verify the required parameter 'namespace' is set
      if (namespace == undefined || namespace == null) {
        throw new Error("Missing the required parameter 'namespace' when calling createNamespacedRoleBinding");
      }

      // verify the required parameter 'body' is set
      if (body == undefined || body == null) {
        throw new Error("Missing the required parameter 'body' when calling createNamespacedRoleBinding");
      }


      var pathParams = {
        'namespace': namespace
      };
      var queryParams = {
        'pretty': opts['pretty']
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['BearerToken'];
      var contentTypes = ['*/*'];
      var accepts = ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'];
      var returnType = V1alpha1RoleBinding;

      return this.apiClient.callApi(
        '/apis/rbac.authorization.k8s.io/v1alpha1/namespaces/{namespace}/rolebindings', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteClusterRole operation.
     * @callback module:io.kubernetes.js/io.kubernetes.js.apis/RbacAuthorization_v1alpha1Api~deleteClusterRoleCallback
     * @param {String} error Error message, if any.
     * @param {module:io.kubernetes.js/io.kubernetes.js.models/V1Status} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * delete a ClusterRole
     * @param {String} name name of the ClusterRole
     * @param {module:io.kubernetes.js/io.kubernetes.js.models/V1DeleteOptions} body 
     * @param {Object} opts Optional parameters
     * @param {String} opts.pretty If &#39;true&#39;, then the output is pretty printed.
     * @param {Number} opts.gracePeriodSeconds The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
     * @param {Boolean} opts.orphanDependents Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \&quot;orphan\&quot; finalizer will be added to/removed from the object&#39;s finalizers list. Either this field or PropagationPolicy may be set, but not both.
     * @param {String} opts.propagationPolicy Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy.
     * @param {module:io.kubernetes.js/io.kubernetes.js.apis/RbacAuthorization_v1alpha1Api~deleteClusterRoleCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:io.kubernetes.js/io.kubernetes.js.models/V1Status}
     */
    this.deleteClusterRole = function(name, body, opts, callback) {
      opts = opts || {};
      var postBody = body;

      // verify the required parameter 'name' is set
      if (name == undefined || name == null) {
        throw new Error("Missing the required parameter 'name' when calling deleteClusterRole");
      }

      // verify the required parameter 'body' is set
      if (body == undefined || body == null) {
        throw new Error("Missing the required parameter 'body' when calling deleteClusterRole");
      }


      var pathParams = {
        'name': name
      };
      var queryParams = {
        'pretty': opts['pretty'],
        'gracePeriodSeconds': opts['gracePeriodSeconds'],
        'orphanDependents': opts['orphanDependents'],
        'propagationPolicy': opts['propagationPolicy']
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['BearerToken'];
      var contentTypes = ['*/*'];
      var accepts = ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'];
      var returnType = V1Status;

      return this.apiClient.callApi(
        '/apis/rbac.authorization.k8s.io/v1alpha1/clusterroles/{name}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteClusterRoleBinding operation.
     * @callback module:io.kubernetes.js/io.kubernetes.js.apis/RbacAuthorization_v1alpha1Api~deleteClusterRoleBindingCallback
     * @param {String} error Error message, if any.
     * @param {module:io.kubernetes.js/io.kubernetes.js.models/V1Status} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * delete a ClusterRoleBinding
     * @param {String} name name of the ClusterRoleBinding
     * @param {module:io.kubernetes.js/io.kubernetes.js.models/V1DeleteOptions} body 
     * @param {Object} opts Optional parameters
     * @param {String} opts.pretty If &#39;true&#39;, then the output is pretty printed.
     * @param {Number} opts.gracePeriodSeconds The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
     * @param {Boolean} opts.orphanDependents Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \&quot;orphan\&quot; finalizer will be added to/removed from the object&#39;s finalizers list. Either this field or PropagationPolicy may be set, but not both.
     * @param {String} opts.propagationPolicy Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy.
     * @param {module:io.kubernetes.js/io.kubernetes.js.apis/RbacAuthorization_v1alpha1Api~deleteClusterRoleBindingCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:io.kubernetes.js/io.kubernetes.js.models/V1Status}
     */
    this.deleteClusterRoleBinding = function(name, body, opts, callback) {
      opts = opts || {};
      var postBody = body;

      // verify the required parameter 'name' is set
      if (name == undefined || name == null) {
        throw new Error("Missing the required parameter 'name' when calling deleteClusterRoleBinding");
      }

      // verify the required parameter 'body' is set
      if (body == undefined || body == null) {
        throw new Error("Missing the required parameter 'body' when calling deleteClusterRoleBinding");
      }


      var pathParams = {
        'name': name
      };
      var queryParams = {
        'pretty': opts['pretty'],
        'gracePeriodSeconds': opts['gracePeriodSeconds'],
        'orphanDependents': opts['orphanDependents'],
        'propagationPolicy': opts['propagationPolicy']
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['BearerToken'];
      var contentTypes = ['*/*'];
      var accepts = ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'];
      var returnType = V1Status;

      return this.apiClient.callApi(
        '/apis/rbac.authorization.k8s.io/v1alpha1/clusterrolebindings/{name}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteCollectionClusterRole operation.
     * @callback module:io.kubernetes.js/io.kubernetes.js.apis/RbacAuthorization_v1alpha1Api~deleteCollectionClusterRoleCallback
     * @param {String} error Error message, if any.
     * @param {module:io.kubernetes.js/io.kubernetes.js.models/V1Status} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * delete collection of ClusterRole
     * @param {Object} opts Optional parameters
     * @param {String} opts.pretty If &#39;true&#39;, then the output is pretty printed.
     * @param {String} opts.fieldSelector A selector to restrict the list of returned objects by their fields. Defaults to everything.
     * @param {String} opts.labelSelector A selector to restrict the list of returned objects by their labels. Defaults to everything.
     * @param {String} opts.resourceVersion When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it&#39;s 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
     * @param {Number} opts.timeoutSeconds Timeout for the list/watch call.
     * @param {Boolean} opts.watch Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
     * @param {module:io.kubernetes.js/io.kubernetes.js.apis/RbacAuthorization_v1alpha1Api~deleteCollectionClusterRoleCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:io.kubernetes.js/io.kubernetes.js.models/V1Status}
     */
    this.deleteCollectionClusterRole = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'pretty': opts['pretty'],
        'fieldSelector': opts['fieldSelector'],
        'labelSelector': opts['labelSelector'],
        'resourceVersion': opts['resourceVersion'],
        'timeoutSeconds': opts['timeoutSeconds'],
        'watch': opts['watch']
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['BearerToken'];
      var contentTypes = ['*/*'];
      var accepts = ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'];
      var returnType = V1Status;

      return this.apiClient.callApi(
        '/apis/rbac.authorization.k8s.io/v1alpha1/clusterroles', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteCollectionClusterRoleBinding operation.
     * @callback module:io.kubernetes.js/io.kubernetes.js.apis/RbacAuthorization_v1alpha1Api~deleteCollectionClusterRoleBindingCallback
     * @param {String} error Error message, if any.
     * @param {module:io.kubernetes.js/io.kubernetes.js.models/V1Status} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * delete collection of ClusterRoleBinding
     * @param {Object} opts Optional parameters
     * @param {String} opts.pretty If &#39;true&#39;, then the output is pretty printed.
     * @param {String} opts.fieldSelector A selector to restrict the list of returned objects by their fields. Defaults to everything.
     * @param {String} opts.labelSelector A selector to restrict the list of returned objects by their labels. Defaults to everything.
     * @param {String} opts.resourceVersion When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it&#39;s 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
     * @param {Number} opts.timeoutSeconds Timeout for the list/watch call.
     * @param {Boolean} opts.watch Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
     * @param {module:io.kubernetes.js/io.kubernetes.js.apis/RbacAuthorization_v1alpha1Api~deleteCollectionClusterRoleBindingCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:io.kubernetes.js/io.kubernetes.js.models/V1Status}
     */
    this.deleteCollectionClusterRoleBinding = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'pretty': opts['pretty'],
        'fieldSelector': opts['fieldSelector'],
        'labelSelector': opts['labelSelector'],
        'resourceVersion': opts['resourceVersion'],
        'timeoutSeconds': opts['timeoutSeconds'],
        'watch': opts['watch']
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['BearerToken'];
      var contentTypes = ['*/*'];
      var accepts = ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'];
      var returnType = V1Status;

      return this.apiClient.callApi(
        '/apis/rbac.authorization.k8s.io/v1alpha1/clusterrolebindings', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteCollectionNamespacedRole operation.
     * @callback module:io.kubernetes.js/io.kubernetes.js.apis/RbacAuthorization_v1alpha1Api~deleteCollectionNamespacedRoleCallback
     * @param {String} error Error message, if any.
     * @param {module:io.kubernetes.js/io.kubernetes.js.models/V1Status} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * delete collection of Role
     * @param {String} namespace object name and auth scope, such as for teams and projects
     * @param {Object} opts Optional parameters
     * @param {String} opts.pretty If &#39;true&#39;, then the output is pretty printed.
     * @param {String} opts.fieldSelector A selector to restrict the list of returned objects by their fields. Defaults to everything.
     * @param {String} opts.labelSelector A selector to restrict the list of returned objects by their labels. Defaults to everything.
     * @param {String} opts.resourceVersion When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it&#39;s 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
     * @param {Number} opts.timeoutSeconds Timeout for the list/watch call.
     * @param {Boolean} opts.watch Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
     * @param {module:io.kubernetes.js/io.kubernetes.js.apis/RbacAuthorization_v1alpha1Api~deleteCollectionNamespacedRoleCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:io.kubernetes.js/io.kubernetes.js.models/V1Status}
     */
    this.deleteCollectionNamespacedRole = function(namespace, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'namespace' is set
      if (namespace == undefined || namespace == null) {
        throw new Error("Missing the required parameter 'namespace' when calling deleteCollectionNamespacedRole");
      }


      var pathParams = {
        'namespace': namespace
      };
      var queryParams = {
        'pretty': opts['pretty'],
        'fieldSelector': opts['fieldSelector'],
        'labelSelector': opts['labelSelector'],
        'resourceVersion': opts['resourceVersion'],
        'timeoutSeconds': opts['timeoutSeconds'],
        'watch': opts['watch']
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['BearerToken'];
      var contentTypes = ['*/*'];
      var accepts = ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'];
      var returnType = V1Status;

      return this.apiClient.callApi(
        '/apis/rbac.authorization.k8s.io/v1alpha1/namespaces/{namespace}/roles', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteCollectionNamespacedRoleBinding operation.
     * @callback module:io.kubernetes.js/io.kubernetes.js.apis/RbacAuthorization_v1alpha1Api~deleteCollectionNamespacedRoleBindingCallback
     * @param {String} error Error message, if any.
     * @param {module:io.kubernetes.js/io.kubernetes.js.models/V1Status} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * delete collection of RoleBinding
     * @param {String} namespace object name and auth scope, such as for teams and projects
     * @param {Object} opts Optional parameters
     * @param {String} opts.pretty If &#39;true&#39;, then the output is pretty printed.
     * @param {String} opts.fieldSelector A selector to restrict the list of returned objects by their fields. Defaults to everything.
     * @param {String} opts.labelSelector A selector to restrict the list of returned objects by their labels. Defaults to everything.
     * @param {String} opts.resourceVersion When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it&#39;s 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
     * @param {Number} opts.timeoutSeconds Timeout for the list/watch call.
     * @param {Boolean} opts.watch Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
     * @param {module:io.kubernetes.js/io.kubernetes.js.apis/RbacAuthorization_v1alpha1Api~deleteCollectionNamespacedRoleBindingCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:io.kubernetes.js/io.kubernetes.js.models/V1Status}
     */
    this.deleteCollectionNamespacedRoleBinding = function(namespace, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'namespace' is set
      if (namespace == undefined || namespace == null) {
        throw new Error("Missing the required parameter 'namespace' when calling deleteCollectionNamespacedRoleBinding");
      }


      var pathParams = {
        'namespace': namespace
      };
      var queryParams = {
        'pretty': opts['pretty'],
        'fieldSelector': opts['fieldSelector'],
        'labelSelector': opts['labelSelector'],
        'resourceVersion': opts['resourceVersion'],
        'timeoutSeconds': opts['timeoutSeconds'],
        'watch': opts['watch']
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['BearerToken'];
      var contentTypes = ['*/*'];
      var accepts = ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'];
      var returnType = V1Status;

      return this.apiClient.callApi(
        '/apis/rbac.authorization.k8s.io/v1alpha1/namespaces/{namespace}/rolebindings', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteNamespacedRole operation.
     * @callback module:io.kubernetes.js/io.kubernetes.js.apis/RbacAuthorization_v1alpha1Api~deleteNamespacedRoleCallback
     * @param {String} error Error message, if any.
     * @param {module:io.kubernetes.js/io.kubernetes.js.models/V1Status} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * delete a Role
     * @param {String} name name of the Role
     * @param {String} namespace object name and auth scope, such as for teams and projects
     * @param {module:io.kubernetes.js/io.kubernetes.js.models/V1DeleteOptions} body 
     * @param {Object} opts Optional parameters
     * @param {String} opts.pretty If &#39;true&#39;, then the output is pretty printed.
     * @param {Number} opts.gracePeriodSeconds The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
     * @param {Boolean} opts.orphanDependents Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \&quot;orphan\&quot; finalizer will be added to/removed from the object&#39;s finalizers list. Either this field or PropagationPolicy may be set, but not both.
     * @param {String} opts.propagationPolicy Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy.
     * @param {module:io.kubernetes.js/io.kubernetes.js.apis/RbacAuthorization_v1alpha1Api~deleteNamespacedRoleCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:io.kubernetes.js/io.kubernetes.js.models/V1Status}
     */
    this.deleteNamespacedRole = function(name, namespace, body, opts, callback) {
      opts = opts || {};
      var postBody = body;

      // verify the required parameter 'name' is set
      if (name == undefined || name == null) {
        throw new Error("Missing the required parameter 'name' when calling deleteNamespacedRole");
      }

      // verify the required parameter 'namespace' is set
      if (namespace == undefined || namespace == null) {
        throw new Error("Missing the required parameter 'namespace' when calling deleteNamespacedRole");
      }

      // verify the required parameter 'body' is set
      if (body == undefined || body == null) {
        throw new Error("Missing the required parameter 'body' when calling deleteNamespacedRole");
      }


      var pathParams = {
        'name': name,
        'namespace': namespace
      };
      var queryParams = {
        'pretty': opts['pretty'],
        'gracePeriodSeconds': opts['gracePeriodSeconds'],
        'orphanDependents': opts['orphanDependents'],
        'propagationPolicy': opts['propagationPolicy']
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['BearerToken'];
      var contentTypes = ['*/*'];
      var accepts = ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'];
      var returnType = V1Status;

      return this.apiClient.callApi(
        '/apis/rbac.authorization.k8s.io/v1alpha1/namespaces/{namespace}/roles/{name}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteNamespacedRoleBinding operation.
     * @callback module:io.kubernetes.js/io.kubernetes.js.apis/RbacAuthorization_v1alpha1Api~deleteNamespacedRoleBindingCallback
     * @param {String} error Error message, if any.
     * @param {module:io.kubernetes.js/io.kubernetes.js.models/V1Status} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * delete a RoleBinding
     * @param {String} name name of the RoleBinding
     * @param {String} namespace object name and auth scope, such as for teams and projects
     * @param {module:io.kubernetes.js/io.kubernetes.js.models/V1DeleteOptions} body 
     * @param {Object} opts Optional parameters
     * @param {String} opts.pretty If &#39;true&#39;, then the output is pretty printed.
     * @param {Number} opts.gracePeriodSeconds The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
     * @param {Boolean} opts.orphanDependents Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \&quot;orphan\&quot; finalizer will be added to/removed from the object&#39;s finalizers list. Either this field or PropagationPolicy may be set, but not both.
     * @param {String} opts.propagationPolicy Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy.
     * @param {module:io.kubernetes.js/io.kubernetes.js.apis/RbacAuthorization_v1alpha1Api~deleteNamespacedRoleBindingCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:io.kubernetes.js/io.kubernetes.js.models/V1Status}
     */
    this.deleteNamespacedRoleBinding = function(name, namespace, body, opts, callback) {
      opts = opts || {};
      var postBody = body;

      // verify the required parameter 'name' is set
      if (name == undefined || name == null) {
        throw new Error("Missing the required parameter 'name' when calling deleteNamespacedRoleBinding");
      }

      // verify the required parameter 'namespace' is set
      if (namespace == undefined || namespace == null) {
        throw new Error("Missing the required parameter 'namespace' when calling deleteNamespacedRoleBinding");
      }

      // verify the required parameter 'body' is set
      if (body == undefined || body == null) {
        throw new Error("Missing the required parameter 'body' when calling deleteNamespacedRoleBinding");
      }


      var pathParams = {
        'name': name,
        'namespace': namespace
      };
      var queryParams = {
        'pretty': opts['pretty'],
        'gracePeriodSeconds': opts['gracePeriodSeconds'],
        'orphanDependents': opts['orphanDependents'],
        'propagationPolicy': opts['propagationPolicy']
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['BearerToken'];
      var contentTypes = ['*/*'];
      var accepts = ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'];
      var returnType = V1Status;

      return this.apiClient.callApi(
        '/apis/rbac.authorization.k8s.io/v1alpha1/namespaces/{namespace}/rolebindings/{name}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getAPIResources operation.
     * @callback module:io.kubernetes.js/io.kubernetes.js.apis/RbacAuthorization_v1alpha1Api~getAPIResourcesCallback
     * @param {String} error Error message, if any.
     * @param {module:io.kubernetes.js/io.kubernetes.js.models/V1APIResourceList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * get available resources
     * @param {module:io.kubernetes.js/io.kubernetes.js.apis/RbacAuthorization_v1alpha1Api~getAPIResourcesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:io.kubernetes.js/io.kubernetes.js.models/V1APIResourceList}
     */
    this.getAPIResources = function(callback) {
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['BearerToken'];
      var contentTypes = ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'];
      var accepts = ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'];
      var returnType = V1APIResourceList;

      return this.apiClient.callApi(
        '/apis/rbac.authorization.k8s.io/v1alpha1/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the listClusterRole operation.
     * @callback module:io.kubernetes.js/io.kubernetes.js.apis/RbacAuthorization_v1alpha1Api~listClusterRoleCallback
     * @param {String} error Error message, if any.
     * @param {module:io.kubernetes.js/io.kubernetes.js.models/V1alpha1ClusterRoleList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * list or watch objects of kind ClusterRole
     * @param {Object} opts Optional parameters
     * @param {String} opts.pretty If &#39;true&#39;, then the output is pretty printed.
     * @param {String} opts.fieldSelector A selector to restrict the list of returned objects by their fields. Defaults to everything.
     * @param {String} opts.labelSelector A selector to restrict the list of returned objects by their labels. Defaults to everything.
     * @param {String} opts.resourceVersion When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it&#39;s 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
     * @param {Number} opts.timeoutSeconds Timeout for the list/watch call.
     * @param {Boolean} opts.watch Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
     * @param {module:io.kubernetes.js/io.kubernetes.js.apis/RbacAuthorization_v1alpha1Api~listClusterRoleCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:io.kubernetes.js/io.kubernetes.js.models/V1alpha1ClusterRoleList}
     */
    this.listClusterRole = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'pretty': opts['pretty'],
        'fieldSelector': opts['fieldSelector'],
        'labelSelector': opts['labelSelector'],
        'resourceVersion': opts['resourceVersion'],
        'timeoutSeconds': opts['timeoutSeconds'],
        'watch': opts['watch']
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['BearerToken'];
      var contentTypes = ['*/*'];
      var accepts = ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'];
      var returnType = V1alpha1ClusterRoleList;

      return this.apiClient.callApi(
        '/apis/rbac.authorization.k8s.io/v1alpha1/clusterroles', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the listClusterRoleBinding operation.
     * @callback module:io.kubernetes.js/io.kubernetes.js.apis/RbacAuthorization_v1alpha1Api~listClusterRoleBindingCallback
     * @param {String} error Error message, if any.
     * @param {module:io.kubernetes.js/io.kubernetes.js.models/V1alpha1ClusterRoleBindingList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * list or watch objects of kind ClusterRoleBinding
     * @param {Object} opts Optional parameters
     * @param {String} opts.pretty If &#39;true&#39;, then the output is pretty printed.
     * @param {String} opts.fieldSelector A selector to restrict the list of returned objects by their fields. Defaults to everything.
     * @param {String} opts.labelSelector A selector to restrict the list of returned objects by their labels. Defaults to everything.
     * @param {String} opts.resourceVersion When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it&#39;s 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
     * @param {Number} opts.timeoutSeconds Timeout for the list/watch call.
     * @param {Boolean} opts.watch Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
     * @param {module:io.kubernetes.js/io.kubernetes.js.apis/RbacAuthorization_v1alpha1Api~listClusterRoleBindingCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:io.kubernetes.js/io.kubernetes.js.models/V1alpha1ClusterRoleBindingList}
     */
    this.listClusterRoleBinding = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'pretty': opts['pretty'],
        'fieldSelector': opts['fieldSelector'],
        'labelSelector': opts['labelSelector'],
        'resourceVersion': opts['resourceVersion'],
        'timeoutSeconds': opts['timeoutSeconds'],
        'watch': opts['watch']
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['BearerToken'];
      var contentTypes = ['*/*'];
      var accepts = ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'];
      var returnType = V1alpha1ClusterRoleBindingList;

      return this.apiClient.callApi(
        '/apis/rbac.authorization.k8s.io/v1alpha1/clusterrolebindings', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the listNamespacedRole operation.
     * @callback module:io.kubernetes.js/io.kubernetes.js.apis/RbacAuthorization_v1alpha1Api~listNamespacedRoleCallback
     * @param {String} error Error message, if any.
     * @param {module:io.kubernetes.js/io.kubernetes.js.models/V1alpha1RoleList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * list or watch objects of kind Role
     * @param {String} namespace object name and auth scope, such as for teams and projects
     * @param {Object} opts Optional parameters
     * @param {String} opts.pretty If &#39;true&#39;, then the output is pretty printed.
     * @param {String} opts.fieldSelector A selector to restrict the list of returned objects by their fields. Defaults to everything.
     * @param {String} opts.labelSelector A selector to restrict the list of returned objects by their labels. Defaults to everything.
     * @param {String} opts.resourceVersion When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it&#39;s 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
     * @param {Number} opts.timeoutSeconds Timeout for the list/watch call.
     * @param {Boolean} opts.watch Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
     * @param {module:io.kubernetes.js/io.kubernetes.js.apis/RbacAuthorization_v1alpha1Api~listNamespacedRoleCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:io.kubernetes.js/io.kubernetes.js.models/V1alpha1RoleList}
     */
    this.listNamespacedRole = function(namespace, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'namespace' is set
      if (namespace == undefined || namespace == null) {
        throw new Error("Missing the required parameter 'namespace' when calling listNamespacedRole");
      }


      var pathParams = {
        'namespace': namespace
      };
      var queryParams = {
        'pretty': opts['pretty'],
        'fieldSelector': opts['fieldSelector'],
        'labelSelector': opts['labelSelector'],
        'resourceVersion': opts['resourceVersion'],
        'timeoutSeconds': opts['timeoutSeconds'],
        'watch': opts['watch']
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['BearerToken'];
      var contentTypes = ['*/*'];
      var accepts = ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'];
      var returnType = V1alpha1RoleList;

      return this.apiClient.callApi(
        '/apis/rbac.authorization.k8s.io/v1alpha1/namespaces/{namespace}/roles', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the listNamespacedRoleBinding operation.
     * @callback module:io.kubernetes.js/io.kubernetes.js.apis/RbacAuthorization_v1alpha1Api~listNamespacedRoleBindingCallback
     * @param {String} error Error message, if any.
     * @param {module:io.kubernetes.js/io.kubernetes.js.models/V1alpha1RoleBindingList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * list or watch objects of kind RoleBinding
     * @param {String} namespace object name and auth scope, such as for teams and projects
     * @param {Object} opts Optional parameters
     * @param {String} opts.pretty If &#39;true&#39;, then the output is pretty printed.
     * @param {String} opts.fieldSelector A selector to restrict the list of returned objects by their fields. Defaults to everything.
     * @param {String} opts.labelSelector A selector to restrict the list of returned objects by their labels. Defaults to everything.
     * @param {String} opts.resourceVersion When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it&#39;s 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
     * @param {Number} opts.timeoutSeconds Timeout for the list/watch call.
     * @param {Boolean} opts.watch Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
     * @param {module:io.kubernetes.js/io.kubernetes.js.apis/RbacAuthorization_v1alpha1Api~listNamespacedRoleBindingCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:io.kubernetes.js/io.kubernetes.js.models/V1alpha1RoleBindingList}
     */
    this.listNamespacedRoleBinding = function(namespace, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'namespace' is set
      if (namespace == undefined || namespace == null) {
        throw new Error("Missing the required parameter 'namespace' when calling listNamespacedRoleBinding");
      }


      var pathParams = {
        'namespace': namespace
      };
      var queryParams = {
        'pretty': opts['pretty'],
        'fieldSelector': opts['fieldSelector'],
        'labelSelector': opts['labelSelector'],
        'resourceVersion': opts['resourceVersion'],
        'timeoutSeconds': opts['timeoutSeconds'],
        'watch': opts['watch']
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['BearerToken'];
      var contentTypes = ['*/*'];
      var accepts = ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'];
      var returnType = V1alpha1RoleBindingList;

      return this.apiClient.callApi(
        '/apis/rbac.authorization.k8s.io/v1alpha1/namespaces/{namespace}/rolebindings', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the listRoleBindingForAllNamespaces operation.
     * @callback module:io.kubernetes.js/io.kubernetes.js.apis/RbacAuthorization_v1alpha1Api~listRoleBindingForAllNamespacesCallback
     * @param {String} error Error message, if any.
     * @param {module:io.kubernetes.js/io.kubernetes.js.models/V1alpha1RoleBindingList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * list or watch objects of kind RoleBinding
     * @param {Object} opts Optional parameters
     * @param {String} opts.fieldSelector A selector to restrict the list of returned objects by their fields. Defaults to everything.
     * @param {String} opts.labelSelector A selector to restrict the list of returned objects by their labels. Defaults to everything.
     * @param {String} opts.pretty If &#39;true&#39;, then the output is pretty printed.
     * @param {String} opts.resourceVersion When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it&#39;s 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
     * @param {Number} opts.timeoutSeconds Timeout for the list/watch call.
     * @param {Boolean} opts.watch Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
     * @param {module:io.kubernetes.js/io.kubernetes.js.apis/RbacAuthorization_v1alpha1Api~listRoleBindingForAllNamespacesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:io.kubernetes.js/io.kubernetes.js.models/V1alpha1RoleBindingList}
     */
    this.listRoleBindingForAllNamespaces = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'fieldSelector': opts['fieldSelector'],
        'labelSelector': opts['labelSelector'],
        'pretty': opts['pretty'],
        'resourceVersion': opts['resourceVersion'],
        'timeoutSeconds': opts['timeoutSeconds'],
        'watch': opts['watch']
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['BearerToken'];
      var contentTypes = ['*/*'];
      var accepts = ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'];
      var returnType = V1alpha1RoleBindingList;

      return this.apiClient.callApi(
        '/apis/rbac.authorization.k8s.io/v1alpha1/rolebindings', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the listRoleForAllNamespaces operation.
     * @callback module:io.kubernetes.js/io.kubernetes.js.apis/RbacAuthorization_v1alpha1Api~listRoleForAllNamespacesCallback
     * @param {String} error Error message, if any.
     * @param {module:io.kubernetes.js/io.kubernetes.js.models/V1alpha1RoleList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * list or watch objects of kind Role
     * @param {Object} opts Optional parameters
     * @param {String} opts.fieldSelector A selector to restrict the list of returned objects by their fields. Defaults to everything.
     * @param {String} opts.labelSelector A selector to restrict the list of returned objects by their labels. Defaults to everything.
     * @param {String} opts.pretty If &#39;true&#39;, then the output is pretty printed.
     * @param {String} opts.resourceVersion When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it&#39;s 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
     * @param {Number} opts.timeoutSeconds Timeout for the list/watch call.
     * @param {Boolean} opts.watch Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
     * @param {module:io.kubernetes.js/io.kubernetes.js.apis/RbacAuthorization_v1alpha1Api~listRoleForAllNamespacesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:io.kubernetes.js/io.kubernetes.js.models/V1alpha1RoleList}
     */
    this.listRoleForAllNamespaces = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'fieldSelector': opts['fieldSelector'],
        'labelSelector': opts['labelSelector'],
        'pretty': opts['pretty'],
        'resourceVersion': opts['resourceVersion'],
        'timeoutSeconds': opts['timeoutSeconds'],
        'watch': opts['watch']
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['BearerToken'];
      var contentTypes = ['*/*'];
      var accepts = ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf', 'application/json;stream=watch', 'application/vnd.kubernetes.protobuf;stream=watch'];
      var returnType = V1alpha1RoleList;

      return this.apiClient.callApi(
        '/apis/rbac.authorization.k8s.io/v1alpha1/roles', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the patchClusterRole operation.
     * @callback module:io.kubernetes.js/io.kubernetes.js.apis/RbacAuthorization_v1alpha1Api~patchClusterRoleCallback
     * @param {String} error Error message, if any.
     * @param {module:io.kubernetes.js/io.kubernetes.js.models/V1alpha1ClusterRole} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * partially update the specified ClusterRole
     * @param {String} name name of the ClusterRole
     * @param {Object} body 
     * @param {Object} opts Optional parameters
     * @param {String} opts.pretty If &#39;true&#39;, then the output is pretty printed.
     * @param {module:io.kubernetes.js/io.kubernetes.js.apis/RbacAuthorization_v1alpha1Api~patchClusterRoleCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:io.kubernetes.js/io.kubernetes.js.models/V1alpha1ClusterRole}
     */
    this.patchClusterRole = function(name, body, opts, callback) {
      opts = opts || {};
      var postBody = body;

      // verify the required parameter 'name' is set
      if (name == undefined || name == null) {
        throw new Error("Missing the required parameter 'name' when calling patchClusterRole");
      }

      // verify the required parameter 'body' is set
      if (body == undefined || body == null) {
        throw new Error("Missing the required parameter 'body' when calling patchClusterRole");
      }


      var pathParams = {
        'name': name
      };
      var queryParams = {
        'pretty': opts['pretty']
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['BearerToken'];
      var contentTypes = ['application/json-patch+json', 'application/merge-patch+json', 'application/strategic-merge-patch+json'];
      var accepts = ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'];
      var returnType = V1alpha1ClusterRole;

      return this.apiClient.callApi(
        '/apis/rbac.authorization.k8s.io/v1alpha1/clusterroles/{name}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the patchClusterRoleBinding operation.
     * @callback module:io.kubernetes.js/io.kubernetes.js.apis/RbacAuthorization_v1alpha1Api~patchClusterRoleBindingCallback
     * @param {String} error Error message, if any.
     * @param {module:io.kubernetes.js/io.kubernetes.js.models/V1alpha1ClusterRoleBinding} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * partially update the specified ClusterRoleBinding
     * @param {String} name name of the ClusterRoleBinding
     * @param {Object} body 
     * @param {Object} opts Optional parameters
     * @param {String} opts.pretty If &#39;true&#39;, then the output is pretty printed.
     * @param {module:io.kubernetes.js/io.kubernetes.js.apis/RbacAuthorization_v1alpha1Api~patchClusterRoleBindingCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:io.kubernetes.js/io.kubernetes.js.models/V1alpha1ClusterRoleBinding}
     */
    this.patchClusterRoleBinding = function(name, body, opts, callback) {
      opts = opts || {};
      var postBody = body;

      // verify the required parameter 'name' is set
      if (name == undefined || name == null) {
        throw new Error("Missing the required parameter 'name' when calling patchClusterRoleBinding");
      }

      // verify the required parameter 'body' is set
      if (body == undefined || body == null) {
        throw new Error("Missing the required parameter 'body' when calling patchClusterRoleBinding");
      }


      var pathParams = {
        'name': name
      };
      var queryParams = {
        'pretty': opts['pretty']
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['BearerToken'];
      var contentTypes = ['application/json-patch+json', 'application/merge-patch+json', 'application/strategic-merge-patch+json'];
      var accepts = ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'];
      var returnType = V1alpha1ClusterRoleBinding;

      return this.apiClient.callApi(
        '/apis/rbac.authorization.k8s.io/v1alpha1/clusterrolebindings/{name}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the patchNamespacedRole operation.
     * @callback module:io.kubernetes.js/io.kubernetes.js.apis/RbacAuthorization_v1alpha1Api~patchNamespacedRoleCallback
     * @param {String} error Error message, if any.
     * @param {module:io.kubernetes.js/io.kubernetes.js.models/V1alpha1Role} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * partially update the specified Role
     * @param {String} name name of the Role
     * @param {String} namespace object name and auth scope, such as for teams and projects
     * @param {Object} body 
     * @param {Object} opts Optional parameters
     * @param {String} opts.pretty If &#39;true&#39;, then the output is pretty printed.
     * @param {module:io.kubernetes.js/io.kubernetes.js.apis/RbacAuthorization_v1alpha1Api~patchNamespacedRoleCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:io.kubernetes.js/io.kubernetes.js.models/V1alpha1Role}
     */
    this.patchNamespacedRole = function(name, namespace, body, opts, callback) {
      opts = opts || {};
      var postBody = body;

      // verify the required parameter 'name' is set
      if (name == undefined || name == null) {
        throw new Error("Missing the required parameter 'name' when calling patchNamespacedRole");
      }

      // verify the required parameter 'namespace' is set
      if (namespace == undefined || namespace == null) {
        throw new Error("Missing the required parameter 'namespace' when calling patchNamespacedRole");
      }

      // verify the required parameter 'body' is set
      if (body == undefined || body == null) {
        throw new Error("Missing the required parameter 'body' when calling patchNamespacedRole");
      }


      var pathParams = {
        'name': name,
        'namespace': namespace
      };
      var queryParams = {
        'pretty': opts['pretty']
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['BearerToken'];
      var contentTypes = ['application/json-patch+json', 'application/merge-patch+json', 'application/strategic-merge-patch+json'];
      var accepts = ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'];
      var returnType = V1alpha1Role;

      return this.apiClient.callApi(
        '/apis/rbac.authorization.k8s.io/v1alpha1/namespaces/{namespace}/roles/{name}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the patchNamespacedRoleBinding operation.
     * @callback module:io.kubernetes.js/io.kubernetes.js.apis/RbacAuthorization_v1alpha1Api~patchNamespacedRoleBindingCallback
     * @param {String} error Error message, if any.
     * @param {module:io.kubernetes.js/io.kubernetes.js.models/V1alpha1RoleBinding} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * partially update the specified RoleBinding
     * @param {String} name name of the RoleBinding
     * @param {String} namespace object name and auth scope, such as for teams and projects
     * @param {Object} body 
     * @param {Object} opts Optional parameters
     * @param {String} opts.pretty If &#39;true&#39;, then the output is pretty printed.
     * @param {module:io.kubernetes.js/io.kubernetes.js.apis/RbacAuthorization_v1alpha1Api~patchNamespacedRoleBindingCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:io.kubernetes.js/io.kubernetes.js.models/V1alpha1RoleBinding}
     */
    this.patchNamespacedRoleBinding = function(name, namespace, body, opts, callback) {
      opts = opts || {};
      var postBody = body;

      // verify the required parameter 'name' is set
      if (name == undefined || name == null) {
        throw new Error("Missing the required parameter 'name' when calling patchNamespacedRoleBinding");
      }

      // verify the required parameter 'namespace' is set
      if (namespace == undefined || namespace == null) {
        throw new Error("Missing the required parameter 'namespace' when calling patchNamespacedRoleBinding");
      }

      // verify the required parameter 'body' is set
      if (body == undefined || body == null) {
        throw new Error("Missing the required parameter 'body' when calling patchNamespacedRoleBinding");
      }


      var pathParams = {
        'name': name,
        'namespace': namespace
      };
      var queryParams = {
        'pretty': opts['pretty']
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['BearerToken'];
      var contentTypes = ['application/json-patch+json', 'application/merge-patch+json', 'application/strategic-merge-patch+json'];
      var accepts = ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'];
      var returnType = V1alpha1RoleBinding;

      return this.apiClient.callApi(
        '/apis/rbac.authorization.k8s.io/v1alpha1/namespaces/{namespace}/rolebindings/{name}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the readClusterRole operation.
     * @callback module:io.kubernetes.js/io.kubernetes.js.apis/RbacAuthorization_v1alpha1Api~readClusterRoleCallback
     * @param {String} error Error message, if any.
     * @param {module:io.kubernetes.js/io.kubernetes.js.models/V1alpha1ClusterRole} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * read the specified ClusterRole
     * @param {String} name name of the ClusterRole
     * @param {Object} opts Optional parameters
     * @param {String} opts.pretty If &#39;true&#39;, then the output is pretty printed.
     * @param {module:io.kubernetes.js/io.kubernetes.js.apis/RbacAuthorization_v1alpha1Api~readClusterRoleCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:io.kubernetes.js/io.kubernetes.js.models/V1alpha1ClusterRole}
     */
    this.readClusterRole = function(name, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'name' is set
      if (name == undefined || name == null) {
        throw new Error("Missing the required parameter 'name' when calling readClusterRole");
      }


      var pathParams = {
        'name': name
      };
      var queryParams = {
        'pretty': opts['pretty']
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['BearerToken'];
      var contentTypes = ['*/*'];
      var accepts = ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'];
      var returnType = V1alpha1ClusterRole;

      return this.apiClient.callApi(
        '/apis/rbac.authorization.k8s.io/v1alpha1/clusterroles/{name}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the readClusterRoleBinding operation.
     * @callback module:io.kubernetes.js/io.kubernetes.js.apis/RbacAuthorization_v1alpha1Api~readClusterRoleBindingCallback
     * @param {String} error Error message, if any.
     * @param {module:io.kubernetes.js/io.kubernetes.js.models/V1alpha1ClusterRoleBinding} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * read the specified ClusterRoleBinding
     * @param {String} name name of the ClusterRoleBinding
     * @param {Object} opts Optional parameters
     * @param {String} opts.pretty If &#39;true&#39;, then the output is pretty printed.
     * @param {module:io.kubernetes.js/io.kubernetes.js.apis/RbacAuthorization_v1alpha1Api~readClusterRoleBindingCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:io.kubernetes.js/io.kubernetes.js.models/V1alpha1ClusterRoleBinding}
     */
    this.readClusterRoleBinding = function(name, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'name' is set
      if (name == undefined || name == null) {
        throw new Error("Missing the required parameter 'name' when calling readClusterRoleBinding");
      }


      var pathParams = {
        'name': name
      };
      var queryParams = {
        'pretty': opts['pretty']
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['BearerToken'];
      var contentTypes = ['*/*'];
      var accepts = ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'];
      var returnType = V1alpha1ClusterRoleBinding;

      return this.apiClient.callApi(
        '/apis/rbac.authorization.k8s.io/v1alpha1/clusterrolebindings/{name}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the readNamespacedRole operation.
     * @callback module:io.kubernetes.js/io.kubernetes.js.apis/RbacAuthorization_v1alpha1Api~readNamespacedRoleCallback
     * @param {String} error Error message, if any.
     * @param {module:io.kubernetes.js/io.kubernetes.js.models/V1alpha1Role} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * read the specified Role
     * @param {String} name name of the Role
     * @param {String} namespace object name and auth scope, such as for teams and projects
     * @param {Object} opts Optional parameters
     * @param {String} opts.pretty If &#39;true&#39;, then the output is pretty printed.
     * @param {module:io.kubernetes.js/io.kubernetes.js.apis/RbacAuthorization_v1alpha1Api~readNamespacedRoleCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:io.kubernetes.js/io.kubernetes.js.models/V1alpha1Role}
     */
    this.readNamespacedRole = function(name, namespace, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'name' is set
      if (name == undefined || name == null) {
        throw new Error("Missing the required parameter 'name' when calling readNamespacedRole");
      }

      // verify the required parameter 'namespace' is set
      if (namespace == undefined || namespace == null) {
        throw new Error("Missing the required parameter 'namespace' when calling readNamespacedRole");
      }


      var pathParams = {
        'name': name,
        'namespace': namespace
      };
      var queryParams = {
        'pretty': opts['pretty']
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['BearerToken'];
      var contentTypes = ['*/*'];
      var accepts = ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'];
      var returnType = V1alpha1Role;

      return this.apiClient.callApi(
        '/apis/rbac.authorization.k8s.io/v1alpha1/namespaces/{namespace}/roles/{name}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the readNamespacedRoleBinding operation.
     * @callback module:io.kubernetes.js/io.kubernetes.js.apis/RbacAuthorization_v1alpha1Api~readNamespacedRoleBindingCallback
     * @param {String} error Error message, if any.
     * @param {module:io.kubernetes.js/io.kubernetes.js.models/V1alpha1RoleBinding} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * read the specified RoleBinding
     * @param {String} name name of the RoleBinding
     * @param {String} namespace object name and auth scope, such as for teams and projects
     * @param {Object} opts Optional parameters
     * @param {String} opts.pretty If &#39;true&#39;, then the output is pretty printed.
     * @param {module:io.kubernetes.js/io.kubernetes.js.apis/RbacAuthorization_v1alpha1Api~readNamespacedRoleBindingCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:io.kubernetes.js/io.kubernetes.js.models/V1alpha1RoleBinding}
     */
    this.readNamespacedRoleBinding = function(name, namespace, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'name' is set
      if (name == undefined || name == null) {
        throw new Error("Missing the required parameter 'name' when calling readNamespacedRoleBinding");
      }

      // verify the required parameter 'namespace' is set
      if (namespace == undefined || namespace == null) {
        throw new Error("Missing the required parameter 'namespace' when calling readNamespacedRoleBinding");
      }


      var pathParams = {
        'name': name,
        'namespace': namespace
      };
      var queryParams = {
        'pretty': opts['pretty']
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['BearerToken'];
      var contentTypes = ['*/*'];
      var accepts = ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'];
      var returnType = V1alpha1RoleBinding;

      return this.apiClient.callApi(
        '/apis/rbac.authorization.k8s.io/v1alpha1/namespaces/{namespace}/rolebindings/{name}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the replaceClusterRole operation.
     * @callback module:io.kubernetes.js/io.kubernetes.js.apis/RbacAuthorization_v1alpha1Api~replaceClusterRoleCallback
     * @param {String} error Error message, if any.
     * @param {module:io.kubernetes.js/io.kubernetes.js.models/V1alpha1ClusterRole} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * replace the specified ClusterRole
     * @param {String} name name of the ClusterRole
     * @param {module:io.kubernetes.js/io.kubernetes.js.models/V1alpha1ClusterRole} body 
     * @param {Object} opts Optional parameters
     * @param {String} opts.pretty If &#39;true&#39;, then the output is pretty printed.
     * @param {module:io.kubernetes.js/io.kubernetes.js.apis/RbacAuthorization_v1alpha1Api~replaceClusterRoleCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:io.kubernetes.js/io.kubernetes.js.models/V1alpha1ClusterRole}
     */
    this.replaceClusterRole = function(name, body, opts, callback) {
      opts = opts || {};
      var postBody = body;

      // verify the required parameter 'name' is set
      if (name == undefined || name == null) {
        throw new Error("Missing the required parameter 'name' when calling replaceClusterRole");
      }

      // verify the required parameter 'body' is set
      if (body == undefined || body == null) {
        throw new Error("Missing the required parameter 'body' when calling replaceClusterRole");
      }


      var pathParams = {
        'name': name
      };
      var queryParams = {
        'pretty': opts['pretty']
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['BearerToken'];
      var contentTypes = ['*/*'];
      var accepts = ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'];
      var returnType = V1alpha1ClusterRole;

      return this.apiClient.callApi(
        '/apis/rbac.authorization.k8s.io/v1alpha1/clusterroles/{name}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the replaceClusterRoleBinding operation.
     * @callback module:io.kubernetes.js/io.kubernetes.js.apis/RbacAuthorization_v1alpha1Api~replaceClusterRoleBindingCallback
     * @param {String} error Error message, if any.
     * @param {module:io.kubernetes.js/io.kubernetes.js.models/V1alpha1ClusterRoleBinding} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * replace the specified ClusterRoleBinding
     * @param {String} name name of the ClusterRoleBinding
     * @param {module:io.kubernetes.js/io.kubernetes.js.models/V1alpha1ClusterRoleBinding} body 
     * @param {Object} opts Optional parameters
     * @param {String} opts.pretty If &#39;true&#39;, then the output is pretty printed.
     * @param {module:io.kubernetes.js/io.kubernetes.js.apis/RbacAuthorization_v1alpha1Api~replaceClusterRoleBindingCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:io.kubernetes.js/io.kubernetes.js.models/V1alpha1ClusterRoleBinding}
     */
    this.replaceClusterRoleBinding = function(name, body, opts, callback) {
      opts = opts || {};
      var postBody = body;

      // verify the required parameter 'name' is set
      if (name == undefined || name == null) {
        throw new Error("Missing the required parameter 'name' when calling replaceClusterRoleBinding");
      }

      // verify the required parameter 'body' is set
      if (body == undefined || body == null) {
        throw new Error("Missing the required parameter 'body' when calling replaceClusterRoleBinding");
      }


      var pathParams = {
        'name': name
      };
      var queryParams = {
        'pretty': opts['pretty']
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['BearerToken'];
      var contentTypes = ['*/*'];
      var accepts = ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'];
      var returnType = V1alpha1ClusterRoleBinding;

      return this.apiClient.callApi(
        '/apis/rbac.authorization.k8s.io/v1alpha1/clusterrolebindings/{name}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the replaceNamespacedRole operation.
     * @callback module:io.kubernetes.js/io.kubernetes.js.apis/RbacAuthorization_v1alpha1Api~replaceNamespacedRoleCallback
     * @param {String} error Error message, if any.
     * @param {module:io.kubernetes.js/io.kubernetes.js.models/V1alpha1Role} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * replace the specified Role
     * @param {String} name name of the Role
     * @param {String} namespace object name and auth scope, such as for teams and projects
     * @param {module:io.kubernetes.js/io.kubernetes.js.models/V1alpha1Role} body 
     * @param {Object} opts Optional parameters
     * @param {String} opts.pretty If &#39;true&#39;, then the output is pretty printed.
     * @param {module:io.kubernetes.js/io.kubernetes.js.apis/RbacAuthorization_v1alpha1Api~replaceNamespacedRoleCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:io.kubernetes.js/io.kubernetes.js.models/V1alpha1Role}
     */
    this.replaceNamespacedRole = function(name, namespace, body, opts, callback) {
      opts = opts || {};
      var postBody = body;

      // verify the required parameter 'name' is set
      if (name == undefined || name == null) {
        throw new Error("Missing the required parameter 'name' when calling replaceNamespacedRole");
      }

      // verify the required parameter 'namespace' is set
      if (namespace == undefined || namespace == null) {
        throw new Error("Missing the required parameter 'namespace' when calling replaceNamespacedRole");
      }

      // verify the required parameter 'body' is set
      if (body == undefined || body == null) {
        throw new Error("Missing the required parameter 'body' when calling replaceNamespacedRole");
      }


      var pathParams = {
        'name': name,
        'namespace': namespace
      };
      var queryParams = {
        'pretty': opts['pretty']
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['BearerToken'];
      var contentTypes = ['*/*'];
      var accepts = ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'];
      var returnType = V1alpha1Role;

      return this.apiClient.callApi(
        '/apis/rbac.authorization.k8s.io/v1alpha1/namespaces/{namespace}/roles/{name}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the replaceNamespacedRoleBinding operation.
     * @callback module:io.kubernetes.js/io.kubernetes.js.apis/RbacAuthorization_v1alpha1Api~replaceNamespacedRoleBindingCallback
     * @param {String} error Error message, if any.
     * @param {module:io.kubernetes.js/io.kubernetes.js.models/V1alpha1RoleBinding} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * replace the specified RoleBinding
     * @param {String} name name of the RoleBinding
     * @param {String} namespace object name and auth scope, such as for teams and projects
     * @param {module:io.kubernetes.js/io.kubernetes.js.models/V1alpha1RoleBinding} body 
     * @param {Object} opts Optional parameters
     * @param {String} opts.pretty If &#39;true&#39;, then the output is pretty printed.
     * @param {module:io.kubernetes.js/io.kubernetes.js.apis/RbacAuthorization_v1alpha1Api~replaceNamespacedRoleBindingCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:io.kubernetes.js/io.kubernetes.js.models/V1alpha1RoleBinding}
     */
    this.replaceNamespacedRoleBinding = function(name, namespace, body, opts, callback) {
      opts = opts || {};
      var postBody = body;

      // verify the required parameter 'name' is set
      if (name == undefined || name == null) {
        throw new Error("Missing the required parameter 'name' when calling replaceNamespacedRoleBinding");
      }

      // verify the required parameter 'namespace' is set
      if (namespace == undefined || namespace == null) {
        throw new Error("Missing the required parameter 'namespace' when calling replaceNamespacedRoleBinding");
      }

      // verify the required parameter 'body' is set
      if (body == undefined || body == null) {
        throw new Error("Missing the required parameter 'body' when calling replaceNamespacedRoleBinding");
      }


      var pathParams = {
        'name': name,
        'namespace': namespace
      };
      var queryParams = {
        'pretty': opts['pretty']
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['BearerToken'];
      var contentTypes = ['*/*'];
      var accepts = ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'];
      var returnType = V1alpha1RoleBinding;

      return this.apiClient.callApi(
        '/apis/rbac.authorization.k8s.io/v1alpha1/namespaces/{namespace}/rolebindings/{name}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
