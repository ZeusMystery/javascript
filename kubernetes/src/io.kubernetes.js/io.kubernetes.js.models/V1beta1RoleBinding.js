/**
 * Kubernetes
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.6.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['io.kubernetes.js/ApiClient', 'io.kubernetes.js/io.kubernetes.js.models/V1ObjectMeta', 'io.kubernetes.js/io.kubernetes.js.models/V1beta1RoleRef', 'io.kubernetes.js/io.kubernetes.js.models/V1beta1Subject'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./V1ObjectMeta'), require('./V1beta1RoleRef'), require('./V1beta1Subject'));
  } else {
    // Browser globals (root is window)
    if (!root.KubernetesJsClient) {
      root.KubernetesJsClient = {};
    }
    root.KubernetesJsClient.V1beta1RoleBinding = factory(root.KubernetesJsClient.ApiClient, root.KubernetesJsClient.V1ObjectMeta, root.KubernetesJsClient.V1beta1RoleRef, root.KubernetesJsClient.V1beta1Subject);
  }
}(this, function(ApiClient, V1ObjectMeta, V1beta1RoleRef, V1beta1Subject) {
  'use strict';




  /**
   * The V1beta1RoleBinding model module.
   * @module io.kubernetes.js/io.kubernetes.js.models/V1beta1RoleBinding
   * @version 1.0.0-snapshot
   */

  /**
   * Constructs a new <code>V1beta1RoleBinding</code>.
   * RoleBinding references a role, but does not contain it.  It can reference a Role in the same namespace or a ClusterRole in the global namespace. It adds who information via Subjects and namespace information by which namespace it exists in.  RoleBindings in a given namespace only have effect in that namespace.
   * @alias module:io.kubernetes.js/io.kubernetes.js.models/V1beta1RoleBinding
   * @class
   * @param roleRef {module:io.kubernetes.js/io.kubernetes.js.models/V1beta1RoleRef} RoleRef can reference a Role in the current namespace or a ClusterRole in the global namespace. If the RoleRef cannot be resolved, the Authorizer must return an error.
   * @param subjects {Array.<module:io.kubernetes.js/io.kubernetes.js.models/V1beta1Subject>} Subjects holds references to the objects the role applies to.
   */
  var exports = function(roleRef, subjects) {
    var _this = this;




    _this['roleRef'] = roleRef;
    _this['subjects'] = subjects;
  };

  /**
   * Constructs a <code>V1beta1RoleBinding</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:io.kubernetes.js/io.kubernetes.js.models/V1beta1RoleBinding} obj Optional instance to populate.
   * @return {module:io.kubernetes.js/io.kubernetes.js.models/V1beta1RoleBinding} The populated <code>V1beta1RoleBinding</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('apiVersion')) {
        obj['apiVersion'] = ApiClient.convertToType(data['apiVersion'], 'String');
      }
      if (data.hasOwnProperty('kind')) {
        obj['kind'] = ApiClient.convertToType(data['kind'], 'String');
      }
      if (data.hasOwnProperty('metadata')) {
        obj['metadata'] = V1ObjectMeta.constructFromObject(data['metadata']);
      }
      if (data.hasOwnProperty('roleRef')) {
        obj['roleRef'] = V1beta1RoleRef.constructFromObject(data['roleRef']);
      }
      if (data.hasOwnProperty('subjects')) {
        obj['subjects'] = ApiClient.convertToType(data['subjects'], [V1beta1Subject]);
      }
    }
    return obj;
  }

  /**
   * APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources
   * @member {String} apiVersion
   */
  exports.prototype['apiVersion'] = undefined;
  /**
   * Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds
   * @member {String} kind
   */
  exports.prototype['kind'] = undefined;
  /**
   * Standard object's metadata.
   * @member {module:io.kubernetes.js/io.kubernetes.js.models/V1ObjectMeta} metadata
   */
  exports.prototype['metadata'] = undefined;
  /**
   * RoleRef can reference a Role in the current namespace or a ClusterRole in the global namespace. If the RoleRef cannot be resolved, the Authorizer must return an error.
   * @member {module:io.kubernetes.js/io.kubernetes.js.models/V1beta1RoleRef} roleRef
   */
  exports.prototype['roleRef'] = undefined;
  /**
   * Subjects holds references to the objects the role applies to.
   * @member {Array.<module:io.kubernetes.js/io.kubernetes.js.models/V1beta1Subject>} subjects
   */
  exports.prototype['subjects'] = undefined;



  return exports;
}));


