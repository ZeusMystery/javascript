/**
 * Kubernetes
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.6.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['io.kubernetes.js/ApiClient', 'io.kubernetes.js/io.kubernetes.js.models/V1EnvFromSource', 'io.kubernetes.js/io.kubernetes.js.models/V1EnvVar', 'io.kubernetes.js/io.kubernetes.js.models/V1LabelSelector', 'io.kubernetes.js/io.kubernetes.js.models/V1Volume', 'io.kubernetes.js/io.kubernetes.js.models/V1VolumeMount'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./V1EnvFromSource'), require('./V1EnvVar'), require('./V1LabelSelector'), require('./V1Volume'), require('./V1VolumeMount'));
  } else {
    // Browser globals (root is window)
    if (!root.KubernetesJsClient) {
      root.KubernetesJsClient = {};
    }
    root.KubernetesJsClient.V1alpha1PodPresetSpec = factory(root.KubernetesJsClient.ApiClient, root.KubernetesJsClient.V1EnvFromSource, root.KubernetesJsClient.V1EnvVar, root.KubernetesJsClient.V1LabelSelector, root.KubernetesJsClient.V1Volume, root.KubernetesJsClient.V1VolumeMount);
  }
}(this, function(ApiClient, V1EnvFromSource, V1EnvVar, V1LabelSelector, V1Volume, V1VolumeMount) {
  'use strict';




  /**
   * The V1alpha1PodPresetSpec model module.
   * @module io.kubernetes.js/io.kubernetes.js.models/V1alpha1PodPresetSpec
   * @version 1.0.0-snapshot
   */

  /**
   * Constructs a new <code>V1alpha1PodPresetSpec</code>.
   * PodPresetSpec is a description of a pod injection policy.
   * @alias module:io.kubernetes.js/io.kubernetes.js.models/V1alpha1PodPresetSpec
   * @class
   */
  var exports = function() {
    var _this = this;






  };

  /**
   * Constructs a <code>V1alpha1PodPresetSpec</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:io.kubernetes.js/io.kubernetes.js.models/V1alpha1PodPresetSpec} obj Optional instance to populate.
   * @return {module:io.kubernetes.js/io.kubernetes.js.models/V1alpha1PodPresetSpec} The populated <code>V1alpha1PodPresetSpec</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('env')) {
        obj['env'] = ApiClient.convertToType(data['env'], [V1EnvVar]);
      }
      if (data.hasOwnProperty('envFrom')) {
        obj['envFrom'] = ApiClient.convertToType(data['envFrom'], [V1EnvFromSource]);
      }
      if (data.hasOwnProperty('selector')) {
        obj['selector'] = V1LabelSelector.constructFromObject(data['selector']);
      }
      if (data.hasOwnProperty('volumeMounts')) {
        obj['volumeMounts'] = ApiClient.convertToType(data['volumeMounts'], [V1VolumeMount]);
      }
      if (data.hasOwnProperty('volumes')) {
        obj['volumes'] = ApiClient.convertToType(data['volumes'], [V1Volume]);
      }
    }
    return obj;
  }

  /**
   * Env defines the collection of EnvVar to inject into containers.
   * @member {Array.<module:io.kubernetes.js/io.kubernetes.js.models/V1EnvVar>} env
   */
  exports.prototype['env'] = undefined;
  /**
   * EnvFrom defines the collection of EnvFromSource to inject into containers.
   * @member {Array.<module:io.kubernetes.js/io.kubernetes.js.models/V1EnvFromSource>} envFrom
   */
  exports.prototype['envFrom'] = undefined;
  /**
   * Selector is a label query over a set of resources, in this case pods. Required.
   * @member {module:io.kubernetes.js/io.kubernetes.js.models/V1LabelSelector} selector
   */
  exports.prototype['selector'] = undefined;
  /**
   * VolumeMounts defines the collection of VolumeMount to inject into containers.
   * @member {Array.<module:io.kubernetes.js/io.kubernetes.js.models/V1VolumeMount>} volumeMounts
   */
  exports.prototype['volumeMounts'] = undefined;
  /**
   * Volumes defines the collection of Volume to inject into the pod.
   * @member {Array.<module:io.kubernetes.js/io.kubernetes.js.models/V1Volume>} volumes
   */
  exports.prototype['volumes'] = undefined;



  return exports;
}));


