/**
 * Kubernetes
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.6.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['io.kubernetes.js/ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.KubernetesJsClient) {
      root.KubernetesJsClient = {};
    }
    root.KubernetesJsClient.V1EndpointPort = factory(root.KubernetesJsClient.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The V1EndpointPort model module.
   * @module io.kubernetes.js/io.kubernetes.js.models/V1EndpointPort
   * @version 1.0.0-snapshot
   */

  /**
   * Constructs a new <code>V1EndpointPort</code>.
   * EndpointPort is a tuple that describes a single port.
   * @alias module:io.kubernetes.js/io.kubernetes.js.models/V1EndpointPort
   * @class
   * @param port {Number} The port number of the endpoint.
   */
  var exports = function(port) {
    var _this = this;


    _this['port'] = port;

  };

  /**
   * Constructs a <code>V1EndpointPort</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:io.kubernetes.js/io.kubernetes.js.models/V1EndpointPort} obj Optional instance to populate.
   * @return {module:io.kubernetes.js/io.kubernetes.js.models/V1EndpointPort} The populated <code>V1EndpointPort</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('name')) {
        obj['name'] = ApiClient.convertToType(data['name'], 'String');
      }
      if (data.hasOwnProperty('port')) {
        obj['port'] = ApiClient.convertToType(data['port'], 'Number');
      }
      if (data.hasOwnProperty('protocol')) {
        obj['protocol'] = ApiClient.convertToType(data['protocol'], 'String');
      }
    }
    return obj;
  }

  /**
   * The name of this port (corresponds to ServicePort.Name). Must be a DNS_LABEL. Optional only if one port is defined.
   * @member {String} name
   */
  exports.prototype['name'] = undefined;
  /**
   * The port number of the endpoint.
   * @member {Number} port
   */
  exports.prototype['port'] = undefined;
  /**
   * The IP protocol for this port. Must be UDP or TCP. Default is TCP.
   * @member {String} protocol
   */
  exports.prototype['protocol'] = undefined;



  return exports;
}));


