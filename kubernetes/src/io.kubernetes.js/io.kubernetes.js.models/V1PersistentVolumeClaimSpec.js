/**
 * Kubernetes
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.6.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['io.kubernetes.js/ApiClient', 'io.kubernetes.js/io.kubernetes.js.models/V1LabelSelector', 'io.kubernetes.js/io.kubernetes.js.models/V1ResourceRequirements'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./V1LabelSelector'), require('./V1ResourceRequirements'));
  } else {
    // Browser globals (root is window)
    if (!root.KubernetesJsClient) {
      root.KubernetesJsClient = {};
    }
    root.KubernetesJsClient.V1PersistentVolumeClaimSpec = factory(root.KubernetesJsClient.ApiClient, root.KubernetesJsClient.V1LabelSelector, root.KubernetesJsClient.V1ResourceRequirements);
  }
}(this, function(ApiClient, V1LabelSelector, V1ResourceRequirements) {
  'use strict';




  /**
   * The V1PersistentVolumeClaimSpec model module.
   * @module io.kubernetes.js/io.kubernetes.js.models/V1PersistentVolumeClaimSpec
   * @version 1.0.0-snapshot
   */

  /**
   * Constructs a new <code>V1PersistentVolumeClaimSpec</code>.
   * PersistentVolumeClaimSpec describes the common attributes of storage devices and allows a Source for provider-specific attributes
   * @alias module:io.kubernetes.js/io.kubernetes.js.models/V1PersistentVolumeClaimSpec
   * @class
   */
  var exports = function() {
    var _this = this;






  };

  /**
   * Constructs a <code>V1PersistentVolumeClaimSpec</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:io.kubernetes.js/io.kubernetes.js.models/V1PersistentVolumeClaimSpec} obj Optional instance to populate.
   * @return {module:io.kubernetes.js/io.kubernetes.js.models/V1PersistentVolumeClaimSpec} The populated <code>V1PersistentVolumeClaimSpec</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('accessModes')) {
        obj['accessModes'] = ApiClient.convertToType(data['accessModes'], ['String']);
      }
      if (data.hasOwnProperty('resources')) {
        obj['resources'] = V1ResourceRequirements.constructFromObject(data['resources']);
      }
      if (data.hasOwnProperty('selector')) {
        obj['selector'] = V1LabelSelector.constructFromObject(data['selector']);
      }
      if (data.hasOwnProperty('storageClassName')) {
        obj['storageClassName'] = ApiClient.convertToType(data['storageClassName'], 'String');
      }
      if (data.hasOwnProperty('volumeName')) {
        obj['volumeName'] = ApiClient.convertToType(data['volumeName'], 'String');
      }
    }
    return obj;
  }

  /**
   * AccessModes contains the desired access modes the volume should have. More info: http://kubernetes.io/docs/user-guide/persistent-volumes#access-modes-1
   * @member {Array.<String>} accessModes
   */
  exports.prototype['accessModes'] = undefined;
  /**
   * Resources represents the minimum resources the volume should have. More info: http://kubernetes.io/docs/user-guide/persistent-volumes#resources
   * @member {module:io.kubernetes.js/io.kubernetes.js.models/V1ResourceRequirements} resources
   */
  exports.prototype['resources'] = undefined;
  /**
   * A label query over volumes to consider for binding.
   * @member {module:io.kubernetes.js/io.kubernetes.js.models/V1LabelSelector} selector
   */
  exports.prototype['selector'] = undefined;
  /**
   * Name of the StorageClass required by the claim. More info: http://kubernetes.io/docs/user-guide/persistent-volumes#class-1
   * @member {String} storageClassName
   */
  exports.prototype['storageClassName'] = undefined;
  /**
   * VolumeName is the binding reference to the PersistentVolume backing this claim.
   * @member {String} volumeName
   */
  exports.prototype['volumeName'] = undefined;



  return exports;
}));


