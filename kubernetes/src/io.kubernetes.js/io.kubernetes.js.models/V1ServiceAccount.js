/**
 * Kubernetes
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.6.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['io.kubernetes.js/ApiClient', 'io.kubernetes.js/io.kubernetes.js.models/V1LocalObjectReference', 'io.kubernetes.js/io.kubernetes.js.models/V1ObjectMeta', 'io.kubernetes.js/io.kubernetes.js.models/V1ObjectReference'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./V1LocalObjectReference'), require('./V1ObjectMeta'), require('./V1ObjectReference'));
  } else {
    // Browser globals (root is window)
    if (!root.KubernetesJsClient) {
      root.KubernetesJsClient = {};
    }
    root.KubernetesJsClient.V1ServiceAccount = factory(root.KubernetesJsClient.ApiClient, root.KubernetesJsClient.V1LocalObjectReference, root.KubernetesJsClient.V1ObjectMeta, root.KubernetesJsClient.V1ObjectReference);
  }
}(this, function(ApiClient, V1LocalObjectReference, V1ObjectMeta, V1ObjectReference) {
  'use strict';




  /**
   * The V1ServiceAccount model module.
   * @module io.kubernetes.js/io.kubernetes.js.models/V1ServiceAccount
   * @version 1.0.0-snapshot
   */

  /**
   * Constructs a new <code>V1ServiceAccount</code>.
   * ServiceAccount binds together: * a name, understood by users, and perhaps by peripheral systems, for an identity * a principal that can be authenticated and authorized * a set of secrets
   * @alias module:io.kubernetes.js/io.kubernetes.js.models/V1ServiceAccount
   * @class
   */
  var exports = function() {
    var _this = this;







  };

  /**
   * Constructs a <code>V1ServiceAccount</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:io.kubernetes.js/io.kubernetes.js.models/V1ServiceAccount} obj Optional instance to populate.
   * @return {module:io.kubernetes.js/io.kubernetes.js.models/V1ServiceAccount} The populated <code>V1ServiceAccount</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('apiVersion')) {
        obj['apiVersion'] = ApiClient.convertToType(data['apiVersion'], 'String');
      }
      if (data.hasOwnProperty('automountServiceAccountToken')) {
        obj['automountServiceAccountToken'] = ApiClient.convertToType(data['automountServiceAccountToken'], 'Boolean');
      }
      if (data.hasOwnProperty('imagePullSecrets')) {
        obj['imagePullSecrets'] = ApiClient.convertToType(data['imagePullSecrets'], [V1LocalObjectReference]);
      }
      if (data.hasOwnProperty('kind')) {
        obj['kind'] = ApiClient.convertToType(data['kind'], 'String');
      }
      if (data.hasOwnProperty('metadata')) {
        obj['metadata'] = V1ObjectMeta.constructFromObject(data['metadata']);
      }
      if (data.hasOwnProperty('secrets')) {
        obj['secrets'] = ApiClient.convertToType(data['secrets'], [V1ObjectReference]);
      }
    }
    return obj;
  }

  /**
   * APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources
   * @member {String} apiVersion
   */
  exports.prototype['apiVersion'] = undefined;
  /**
   * AutomountServiceAccountToken indicates whether pods running as this service account should have an API token automatically mounted. Can be overridden at the pod level.
   * @member {Boolean} automountServiceAccountToken
   */
  exports.prototype['automountServiceAccountToken'] = undefined;
  /**
   * ImagePullSecrets is a list of references to secrets in the same namespace to use for pulling any images in pods that reference this ServiceAccount. ImagePullSecrets are distinct from Secrets because Secrets can be mounted in the pod, but ImagePullSecrets are only accessed by the kubelet. More info: http://kubernetes.io/docs/user-guide/secrets#manually-specifying-an-imagepullsecret
   * @member {Array.<module:io.kubernetes.js/io.kubernetes.js.models/V1LocalObjectReference>} imagePullSecrets
   */
  exports.prototype['imagePullSecrets'] = undefined;
  /**
   * Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds
   * @member {String} kind
   */
  exports.prototype['kind'] = undefined;
  /**
   * Standard object's metadata. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#metadata
   * @member {module:io.kubernetes.js/io.kubernetes.js.models/V1ObjectMeta} metadata
   */
  exports.prototype['metadata'] = undefined;
  /**
   * Secrets is the list of secrets allowed to be used by pods running using this ServiceAccount. More info: http://kubernetes.io/docs/user-guide/secrets
   * @member {Array.<module:io.kubernetes.js/io.kubernetes.js.models/V1ObjectReference>} secrets
   */
  exports.prototype['secrets'] = undefined;



  return exports;
}));


