/**
 * Kubernetes
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.6.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['io.kubernetes.js/ApiClient', 'io.kubernetes.js/io.kubernetes.js.models/V1beta1FSGroupStrategyOptions', 'io.kubernetes.js/io.kubernetes.js.models/V1beta1HostPortRange', 'io.kubernetes.js/io.kubernetes.js.models/V1beta1RunAsUserStrategyOptions', 'io.kubernetes.js/io.kubernetes.js.models/V1beta1SELinuxStrategyOptions', 'io.kubernetes.js/io.kubernetes.js.models/V1beta1SupplementalGroupsStrategyOptions'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./V1beta1FSGroupStrategyOptions'), require('./V1beta1HostPortRange'), require('./V1beta1RunAsUserStrategyOptions'), require('./V1beta1SELinuxStrategyOptions'), require('./V1beta1SupplementalGroupsStrategyOptions'));
  } else {
    // Browser globals (root is window)
    if (!root.KubernetesJsClient) {
      root.KubernetesJsClient = {};
    }
    root.KubernetesJsClient.V1beta1PodSecurityPolicySpec = factory(root.KubernetesJsClient.ApiClient, root.KubernetesJsClient.V1beta1FSGroupStrategyOptions, root.KubernetesJsClient.V1beta1HostPortRange, root.KubernetesJsClient.V1beta1RunAsUserStrategyOptions, root.KubernetesJsClient.V1beta1SELinuxStrategyOptions, root.KubernetesJsClient.V1beta1SupplementalGroupsStrategyOptions);
  }
}(this, function(ApiClient, V1beta1FSGroupStrategyOptions, V1beta1HostPortRange, V1beta1RunAsUserStrategyOptions, V1beta1SELinuxStrategyOptions, V1beta1SupplementalGroupsStrategyOptions) {
  'use strict';




  /**
   * The V1beta1PodSecurityPolicySpec model module.
   * @module io.kubernetes.js/io.kubernetes.js.models/V1beta1PodSecurityPolicySpec
   * @version 1.0.0-snapshot
   */

  /**
   * Constructs a new <code>V1beta1PodSecurityPolicySpec</code>.
   * Pod Security Policy Spec defines the policy enforced.
   * @alias module:io.kubernetes.js/io.kubernetes.js.models/V1beta1PodSecurityPolicySpec
   * @class
   * @param fsGroup {module:io.kubernetes.js/io.kubernetes.js.models/V1beta1FSGroupStrategyOptions} FSGroup is the strategy that will dictate what fs group is used by the SecurityContext.
   * @param runAsUser {module:io.kubernetes.js/io.kubernetes.js.models/V1beta1RunAsUserStrategyOptions} runAsUser is the strategy that will dictate the allowable RunAsUser values that may be set.
   * @param seLinux {module:io.kubernetes.js/io.kubernetes.js.models/V1beta1SELinuxStrategyOptions} seLinux is the strategy that will dictate the allowable labels that may be set.
   * @param supplementalGroups {module:io.kubernetes.js/io.kubernetes.js.models/V1beta1SupplementalGroupsStrategyOptions} SupplementalGroups is the strategy that will dictate what supplemental groups are used by the SecurityContext.
   */
  var exports = function(fsGroup, runAsUser, seLinux, supplementalGroups) {
    var _this = this;



    _this['fsGroup'] = fsGroup;







    _this['runAsUser'] = runAsUser;
    _this['seLinux'] = seLinux;
    _this['supplementalGroups'] = supplementalGroups;

  };

  /**
   * Constructs a <code>V1beta1PodSecurityPolicySpec</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:io.kubernetes.js/io.kubernetes.js.models/V1beta1PodSecurityPolicySpec} obj Optional instance to populate.
   * @return {module:io.kubernetes.js/io.kubernetes.js.models/V1beta1PodSecurityPolicySpec} The populated <code>V1beta1PodSecurityPolicySpec</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('allowedCapabilities')) {
        obj['allowedCapabilities'] = ApiClient.convertToType(data['allowedCapabilities'], ['String']);
      }
      if (data.hasOwnProperty('defaultAddCapabilities')) {
        obj['defaultAddCapabilities'] = ApiClient.convertToType(data['defaultAddCapabilities'], ['String']);
      }
      if (data.hasOwnProperty('fsGroup')) {
        obj['fsGroup'] = V1beta1FSGroupStrategyOptions.constructFromObject(data['fsGroup']);
      }
      if (data.hasOwnProperty('hostIPC')) {
        obj['hostIPC'] = ApiClient.convertToType(data['hostIPC'], 'Boolean');
      }
      if (data.hasOwnProperty('hostNetwork')) {
        obj['hostNetwork'] = ApiClient.convertToType(data['hostNetwork'], 'Boolean');
      }
      if (data.hasOwnProperty('hostPID')) {
        obj['hostPID'] = ApiClient.convertToType(data['hostPID'], 'Boolean');
      }
      if (data.hasOwnProperty('hostPorts')) {
        obj['hostPorts'] = ApiClient.convertToType(data['hostPorts'], [V1beta1HostPortRange]);
      }
      if (data.hasOwnProperty('privileged')) {
        obj['privileged'] = ApiClient.convertToType(data['privileged'], 'Boolean');
      }
      if (data.hasOwnProperty('readOnlyRootFilesystem')) {
        obj['readOnlyRootFilesystem'] = ApiClient.convertToType(data['readOnlyRootFilesystem'], 'Boolean');
      }
      if (data.hasOwnProperty('requiredDropCapabilities')) {
        obj['requiredDropCapabilities'] = ApiClient.convertToType(data['requiredDropCapabilities'], ['String']);
      }
      if (data.hasOwnProperty('runAsUser')) {
        obj['runAsUser'] = V1beta1RunAsUserStrategyOptions.constructFromObject(data['runAsUser']);
      }
      if (data.hasOwnProperty('seLinux')) {
        obj['seLinux'] = V1beta1SELinuxStrategyOptions.constructFromObject(data['seLinux']);
      }
      if (data.hasOwnProperty('supplementalGroups')) {
        obj['supplementalGroups'] = V1beta1SupplementalGroupsStrategyOptions.constructFromObject(data['supplementalGroups']);
      }
      if (data.hasOwnProperty('volumes')) {
        obj['volumes'] = ApiClient.convertToType(data['volumes'], ['String']);
      }
    }
    return obj;
  }

  /**
   * AllowedCapabilities is a list of capabilities that can be requested to add to the container. Capabilities in this field may be added at the pod author's discretion. You must not list a capability in both AllowedCapabilities and RequiredDropCapabilities.
   * @member {Array.<String>} allowedCapabilities
   */
  exports.prototype['allowedCapabilities'] = undefined;
  /**
   * DefaultAddCapabilities is the default set of capabilities that will be added to the container unless the pod spec specifically drops the capability.  You may not list a capabiility in both DefaultAddCapabilities and RequiredDropCapabilities.
   * @member {Array.<String>} defaultAddCapabilities
   */
  exports.prototype['defaultAddCapabilities'] = undefined;
  /**
   * FSGroup is the strategy that will dictate what fs group is used by the SecurityContext.
   * @member {module:io.kubernetes.js/io.kubernetes.js.models/V1beta1FSGroupStrategyOptions} fsGroup
   */
  exports.prototype['fsGroup'] = undefined;
  /**
   * hostIPC determines if the policy allows the use of HostIPC in the pod spec.
   * @member {Boolean} hostIPC
   */
  exports.prototype['hostIPC'] = undefined;
  /**
   * hostNetwork determines if the policy allows the use of HostNetwork in the pod spec.
   * @member {Boolean} hostNetwork
   */
  exports.prototype['hostNetwork'] = undefined;
  /**
   * hostPID determines if the policy allows the use of HostPID in the pod spec.
   * @member {Boolean} hostPID
   */
  exports.prototype['hostPID'] = undefined;
  /**
   * hostPorts determines which host port ranges are allowed to be exposed.
   * @member {Array.<module:io.kubernetes.js/io.kubernetes.js.models/V1beta1HostPortRange>} hostPorts
   */
  exports.prototype['hostPorts'] = undefined;
  /**
   * privileged determines if a pod can request to be run as privileged.
   * @member {Boolean} privileged
   */
  exports.prototype['privileged'] = undefined;
  /**
   * ReadOnlyRootFilesystem when set to true will force containers to run with a read only root file system.  If the container specifically requests to run with a non-read only root file system the PSP should deny the pod. If set to false the container may run with a read only root file system if it wishes but it will not be forced to.
   * @member {Boolean} readOnlyRootFilesystem
   */
  exports.prototype['readOnlyRootFilesystem'] = undefined;
  /**
   * RequiredDropCapabilities are the capabilities that will be dropped from the container.  These are required to be dropped and cannot be added.
   * @member {Array.<String>} requiredDropCapabilities
   */
  exports.prototype['requiredDropCapabilities'] = undefined;
  /**
   * runAsUser is the strategy that will dictate the allowable RunAsUser values that may be set.
   * @member {module:io.kubernetes.js/io.kubernetes.js.models/V1beta1RunAsUserStrategyOptions} runAsUser
   */
  exports.prototype['runAsUser'] = undefined;
  /**
   * seLinux is the strategy that will dictate the allowable labels that may be set.
   * @member {module:io.kubernetes.js/io.kubernetes.js.models/V1beta1SELinuxStrategyOptions} seLinux
   */
  exports.prototype['seLinux'] = undefined;
  /**
   * SupplementalGroups is the strategy that will dictate what supplemental groups are used by the SecurityContext.
   * @member {module:io.kubernetes.js/io.kubernetes.js.models/V1beta1SupplementalGroupsStrategyOptions} supplementalGroups
   */
  exports.prototype['supplementalGroups'] = undefined;
  /**
   * volumes is a white list of allowed volume plugins.  Empty indicates that all plugins may be used.
   * @member {Array.<String>} volumes
   */
  exports.prototype['volumes'] = undefined;



  return exports;
}));


