/**
 * Kubernetes
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.6.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['io.kubernetes.js/ApiClient', 'io.kubernetes.js/io.kubernetes.js.models/V1LabelSelector', 'io.kubernetes.js/io.kubernetes.js.models/V1PodTemplateSpec', 'io.kubernetes.js/io.kubernetes.js.models/V1beta1DaemonSetUpdateStrategy'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./V1LabelSelector'), require('./V1PodTemplateSpec'), require('./V1beta1DaemonSetUpdateStrategy'));
  } else {
    // Browser globals (root is window)
    if (!root.KubernetesJsClient) {
      root.KubernetesJsClient = {};
    }
    root.KubernetesJsClient.V1beta1DaemonSetSpec = factory(root.KubernetesJsClient.ApiClient, root.KubernetesJsClient.V1LabelSelector, root.KubernetesJsClient.V1PodTemplateSpec, root.KubernetesJsClient.V1beta1DaemonSetUpdateStrategy);
  }
}(this, function(ApiClient, V1LabelSelector, V1PodTemplateSpec, V1beta1DaemonSetUpdateStrategy) {
  'use strict';




  /**
   * The V1beta1DaemonSetSpec model module.
   * @module io.kubernetes.js/io.kubernetes.js.models/V1beta1DaemonSetSpec
   * @version 1.0.0-snapshot
   */

  /**
   * Constructs a new <code>V1beta1DaemonSetSpec</code>.
   * DaemonSetSpec is the specification of a daemon set.
   * @alias module:io.kubernetes.js/io.kubernetes.js.models/V1beta1DaemonSetSpec
   * @class
   * @param template {module:io.kubernetes.js/io.kubernetes.js.models/V1PodTemplateSpec} An object that describes the pod that will be created. The DaemonSet will create exactly one copy of this pod on every node that matches the template's node selector (or on every node if no node selector is specified). More info: http://kubernetes.io/docs/user-guide/replication-controller#pod-template
   */
  var exports = function(template) {
    var _this = this;



    _this['template'] = template;


  };

  /**
   * Constructs a <code>V1beta1DaemonSetSpec</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:io.kubernetes.js/io.kubernetes.js.models/V1beta1DaemonSetSpec} obj Optional instance to populate.
   * @return {module:io.kubernetes.js/io.kubernetes.js.models/V1beta1DaemonSetSpec} The populated <code>V1beta1DaemonSetSpec</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('minReadySeconds')) {
        obj['minReadySeconds'] = ApiClient.convertToType(data['minReadySeconds'], 'Number');
      }
      if (data.hasOwnProperty('selector')) {
        obj['selector'] = V1LabelSelector.constructFromObject(data['selector']);
      }
      if (data.hasOwnProperty('template')) {
        obj['template'] = V1PodTemplateSpec.constructFromObject(data['template']);
      }
      if (data.hasOwnProperty('templateGeneration')) {
        obj['templateGeneration'] = ApiClient.convertToType(data['templateGeneration'], 'Number');
      }
      if (data.hasOwnProperty('updateStrategy')) {
        obj['updateStrategy'] = V1beta1DaemonSetUpdateStrategy.constructFromObject(data['updateStrategy']);
      }
    }
    return obj;
  }

  /**
   * The minimum number of seconds for which a newly created DaemonSet pod should be ready without any of its container crashing, for it to be considered available. Defaults to 0 (pod will be considered available as soon as it is ready).
   * @member {Number} minReadySeconds
   */
  exports.prototype['minReadySeconds'] = undefined;
  /**
   * A label query over pods that are managed by the daemon set. Must match in order to be controlled. If empty, defaulted to labels on Pod template. More info: http://kubernetes.io/docs/user-guide/labels#label-selectors
   * @member {module:io.kubernetes.js/io.kubernetes.js.models/V1LabelSelector} selector
   */
  exports.prototype['selector'] = undefined;
  /**
   * An object that describes the pod that will be created. The DaemonSet will create exactly one copy of this pod on every node that matches the template's node selector (or on every node if no node selector is specified). More info: http://kubernetes.io/docs/user-guide/replication-controller#pod-template
   * @member {module:io.kubernetes.js/io.kubernetes.js.models/V1PodTemplateSpec} template
   */
  exports.prototype['template'] = undefined;
  /**
   * A sequence number representing a specific generation of the template. Populated by the system. It can be set only during the creation.
   * @member {Number} templateGeneration
   */
  exports.prototype['templateGeneration'] = undefined;
  /**
   * An update strategy to replace existing DaemonSet pods with new pods.
   * @member {module:io.kubernetes.js/io.kubernetes.js.models/V1beta1DaemonSetUpdateStrategy} updateStrategy
   */
  exports.prototype['updateStrategy'] = undefined;



  return exports;
}));


